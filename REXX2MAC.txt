/* rexx */                                                                      
trace('o')                                                                      
                                                                                
/* Execute an edit macro on library members                 */                  
                                                                                
/* Purpose:                                                 */                  
/*         VIEW      BOZO.PDS                               */                  
/* Command ===> s *2* rexx2mac macro01 parm1                */                  
/*            Name     Prompt                               */                  
/* _________ MBR1                                           */                  
/* _________ MBR2                                           */                  
/* _________ MBR3                                           */                  
/* will execute edit macro macro01 with parm parm1          */                  
/* on all members with name containing 2.                   */                  
/* Members may be modified by macro.                        */                  
/* parm1 will be in uppercase due to panel zcmd attribute.  */                  
                                                                                
/* Other example:                                           */                  
/* Command ===> cmde                                        */                  
/* Enter TSO commands below:                                */                  
/* ===> rexx2mac 'bozo.pds(mbr2)' macro01 parm1             */                  
                                                                                
 parse arg dsn . /* qualified dsname with or without member */                  
 address ispexec; 'control errors return'                                       
                                                                                
  cmd   = lastcmd()     /* last command from command stack  */                  
  /* alternative: cmd = retp()                              */                  
  macro = word(cmd,4)                                                           
  parm  = subword(cmd,5) /* rest starting from 5th word     */                  
  /* For Command ===> s * rexx2mac macro01 aA bB            */                  
  /* in View panel ISRUDSM with ZCMD attribute CAPS(ON)     */                  
  /* lastcmd() gives:                                       */                  
  /* 'S * REXX2MAC MACRO01 AA BB'                           */                  
  /* and we have: macro = 'MACRO01' and parm = 'AA BB'      */                  
                                                                                
  "edit dataset("dsn") macro("macro") parm(parm)"                               
        edit_rc = rc                                                            
        call check_rc edit_rc,0,'edit'                                          
  /* With ispexec "view ..." member not saved by the edit macro */              
  /* Edit return codes:                                                         
      0 Normal completion; data was saved.                                      
      4 Normal completion; data was not saved for one of these reasons:         
        No data changes were made during the EDIT session.                      
        The CANCEL command was used to exit EDIT.                               
        Browse was substituted for EDIT because of insufficient storage.        
     10 Member or generation (if specified) not found.                          
     12 YES was specified for the LOCK parameter.                               
     14 Member, sequential data set, or z/OS UNIX file in use.                  
     16 Either:  No members matched the specified pattern                       
                 No members in the partitioned data set                         
     18 A VSAM data set was specified but the ISPF Configuration Table          
        does not allow VSAM processing.                                         
     20 Severe error; unable to continue.                                       
  */                                                                            
  zispfrc = 0                                                                   
  'vput zispfrc'                                                                
  address /* from ispexec                                   */                  
 exit zispfrc                                                                   
 /*_________________________________________________________*/                  
 check_rc:                                                                      
                                                                                
  /* call example:    call check_rc rc,0,'libdef isptlib'   */                  
  /* In case of error:                                                          
  ZEDMSGNO (message identifier), ZEDISMSG (short message text) and ZEDILMSG     
  */                                                                            
  if arg(1)<=arg(2) then return                                                 
  /* ISPEXEC or ISREDIT error:                              */                  
  if ZERRSM   <> 'ZERRSM'   then say 'ZERRSM   = 'ZERRSM                        
  if ZERRLM   <> 'ZERRLM'   then say 'ZERRLM   = 'ZERRLM                        
  if ZEDMSGNO <> 'ZEDMSGNO' then say 'ZEDMSGNO = 'ZEDMSGNO                      
  if ZEDISMSG <> 'ZEDISMSG' then say 'ZEDISMSG = 'ZEDISMSG                      
  if ZEDILMSG <> 'ZEDILMSG' then say 'ZEDILMSG = 'ZEDILMSG                      
  say 'rc = 'arg(1)                                                             
  if debug='DEBUG' then                                                         
    say 'FUNC='arg(3) 'RC='arg(1) 'ZERRMSG='zerrmsg                             
  zispfrc = 16                                                                  
  address ispexec 'vput zispfrc'                                                
  exit zispfrc                                                                  
 /*_________________________________________________________*/                  
