/* rexx */                                                                      
 trace o                                                                        
                                                                                
 /* Edit macro which may be used instead of the                  */             
 /* 'SAVE' Edit command.                                         */             
                                                                                
 /* Apart of the normal SAVE, it saves the library member in     */             
 /* a member named, by default, SAVED                            */             
 /* Examples of use, in ISPF EDIT:                               */             
 /* Command ===> sav      <-- normal save and save in member SAVED    */        
 /* Command ===> sav SAVED2 <-- normal save and save in member SAVED2 */        
 /*                                                              */             
 /* The edit macro has a parameter,                              */             
 /* set by default to "yes", save_in_waste_basket.               */             
 /* If the library being edited has fixed record format and      */             
 /* LRECL=80, the member is also saved in a library              */             
 /* prefix.WASTE.BASKET                                          */             
 /* This library is created if it does not exist.                */             
                                                                                
 /* For a sequential dataset or a library member, the first      */             
 /* lines are also stored in a clipboard for the length of       */             
 /* the TSO session.                                             */             
                                                                                
 /* If a library member is inadvertently deleted, a previous     */             
 /* version may be copied from member saved.                     */             
 /* Case of inadvertent member deletion:                         */             
 /* In the member list of a library with no generation           */             
 /* while CONFIRM NO is in force, 'D' is typed instead of 'S'.   */             
 /* Touches 'S' and 'D' are adjacent on a keyboard.              */             
                                                                                
 saved     = "SAVED" /* save member in member saved              */             
                                                                                
 clipboard = "SAVED" /* save beginning in clipboard              */             
 maxcut    = 3000    /* Maximum number of lines to cut           */             
                     /* into clipboard.                          */             
                     /* Compromise between size and              */             
                     /* being unuseful most of the time.         */             
                                                                                
 save_in_waste_basket = "yes" /* may be set to "no"              */             
 /* waste_basket is a library with RECFM=FB and LRECL=80         */             
 /* Its dsname is: prefix"."waste_basket_but_prefix              */             
 /* prefix is determined by: call set_up_prefix                  */             
 /* using profile or userid.                                     */             
 waste_basket_but_prefix = "WASTE.BASKET" /* <== Change if needed */            
 /* If the library does not exist, it is created.                */             
                                                                                
 set_delete_confirmation_on = "no"  /* may be set to "yes"       */             
 /* if "no" leave variable zmemconf as it is.                    */             
 /* if "yes" then zmemconf = "ON"; "vput zmemconf shared"        */             
                                                                                
 address isredit                                                                
 'macro (parm)'                                                                 
 macro_rc = rc                                                                  
 select /* according to macro_rc                                 */             
                                                                                
 /*_______________ EDIT MACRO ___________________________________*/             
   when macro_rc = 0  then do /* it is an edit macro             */             
                                                                                
     /* NEWGEN and NOGEN are parameters of SAVE Edit command     */             
                                                                                
     /* Separate parm into parm1 and parm2:                      */             
     /* parm1 has neither NEWGEN or NOGEN                        */             
     /* parm2 has         NEWGEN or NOGEN                        */             
     parm1 = ''; parm2 = ''    /* initialize                     */             
     do i = 1 to words(parm)                                                    
        w = word(parm,i)       /* i-th word of parm              */             
        w_upper = translate(w) /* upper case                     */             
        if wordpos(w_upper,'NEWGEN NOGEN') = 0 then parm1 = parm1' 'w           
                                               else parm2 = parm2' 'w           
     end /* do i = 1 to words(parm)                              */             
                                                                                
     /*    Normal SAVE always done:                              */             
     'builtin save 'parm2   /* parm2 may contain NEWGEN or NOGEN */             
                                                                                
     /*    Extra saves follow:                                   */             
     if sysvar(sysispf)  = 'ACTIVE' &,                                          
        sysvar("sysenv") = 'FORE'   then do                                     
        /* ISPF foreground                                       */             
                                                                                
        if words(parm1) > 0 then do                                             
           /* Change default name of member where to save        */             
           /* using first word of parm1.                         */             
           saved = translate(word(parm,1))                                      
           clipboard = saved                                                    
        end /* Change default name of member where to save       */             
                                                                                
        '(member) = member'                                                     
        if member <> '' &,                      /* library       */             
           member <> saved then do                                              
                                                                                
           /* Extra save in own library                          */             
           "rep "saved" .zf .zl"                /* save member   */             
                                                                                
           if save_in_waste_basket = "yes" then do                              
             /* Extra save in waste basket library.              */             
             /* If a library member is being edited and          */             
             /* if the library has fixed record format           */             
             /* and LRECL=80,                                    */             
             /* then save member in a waste basket library.      */             
             '(blksize) = blksize'                                              
             '(lrecl)   = lrecl'                                                
             if blksize//lrecl = 0 then do /* multiple           */             
                '(dataset) = dataset'                                           
                address tso                                                     
                  listdsi_rc = listdsi("'"dataset"'")                           
                address                                                         
                if left(sysrecfm,1) = "F" then do                               
                /* Edited library has fixed record format and    */             
                /* LRECL=80.                                     */             
                   call set_up_prefix                                           
                   /* waste_basket_but_prefix defined            */             
                   /* at the beginning of this edit macro.       */             
                   waste_basket = prefix"."waste_basket_but_prefix              
                   ret_sysdsn = sysdsn("'"waste_basket"'")                      
                   if ret_sysdsn <> 'OK' then do                                
                      /* Create waste_basket                     */             
                      address tso "alloc da('"waste_basket"')  ",               
                       "unit(sysda) cyl sp(5 10) dir(300)      ",               
                       "dsntype(library,2) recfm(f b) lrecl(80)",               
                       "blksize(0) new catalog reuse"                           
                       ret_alloc = rc                                           
                       if ret_alloc <> 0 then                                   
                          say "Could not allocate "waste_basket                 
                   end /* if ret_sysdsn <> 'OK'                  */             
                                                                                
                   if ret_sysdsn = 'OK' ! ret_alloc = 0 then do                 
                      saved2 = waste_basket'('member')'                         
                     "rep '"saved2"' .zf .zl"   /* save member   */             
                   end /* if ret_sysdsn = 'OK' ! ret_alloc = 0   */             
                                                                                
                end /* if left(sysrecfm,1) = "F"                 */             
             end /* if blksize//lrecl = 0 multiple               */             
           end /* if save_in_waste_basket = "yes"                */             
        end /* if member <> '' & member <> saved                 */             
                                                                                
        /* Save for "as long as you are logged on to TSO"        */             
        '(lines) = linenum .zl' /* total number of lines         */             
        'cut 1 'min(lines,maxcut) clipboard' replace'                           
                                                                                
        if set_delete_confirmation_on = "yes" then do                           
           zmemconf = "ON"                                                      
           address ispexec "vput zmemconf shared"                               
        end /* if set_delete_confirmation_on = "yes"             */             
                                                                                
     end /* ISPF foreground                                      */             
                                                                                
     exit 1                                                                     
                                                                                
 /*_______________ OTHERWISE ____________________________________*/             
   otherwise do /* macro_rc different of 0                       */             
     parse source . . rexxname .    /* rexxname in upper case    */             
     say                                                                        
     say 'This is customized macro 'rexxname'.'                                 
     say rexxname" macro_rc = "macro_rc                                         
     say "We exit with code 16."                                                
     exit 16                                                                    
   end /* otherwise                                              */             
                                                                                
 end /* select according to macro_rc                             */             
 /*___________________________________________________________________*/        
                                                                                
 set_up_prefix:                                                                 
                                                                                
 /* Set up new output file prefix.                                    */        
 prefix = sysvar('syspref')              /* tso profile prefix        */        
 uid    = sysvar('sysuid')               /* tso userid                */        
 if prefix = '' then prefix = uid        /* use uid if null prefix    */        
 if prefix <> '' & prefix <> uid then    /* different prefix than uid */        
    prefix = prefix'.'uid                /* use prefix.uid            */        
                                                                                
 return                                                                         
 /*__________________________________________________________*/                 
