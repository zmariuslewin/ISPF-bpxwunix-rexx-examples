/* rexx */                                                                      
 /* rexx or edit macro.                                             */          
                                                                                
 /* For a library member, accessed in ISPF 3.4,                     */          
 /* this is an alternative to                                       */          
 /* 1) Selection with a '/' in prompt field, such as:               */          
 /*            Name     Prompt                                      */          
 /* S________ BOZO01   /                                            */          
 /* and                                                             */          
 /* 2) On the next panel, selecting  2. UTF-8 under Data Encoding.  */          
 /*    This panel is named "EDIT entry panel" (ISRUEDIT).           */          
 /*                                                                 */          
 /* The same "EDIT entry panel" may be used to clear                */          
 /* the Initial Macro field, in case of a remaining unwanted        */          
 /* initial macro (cf message at top right).                        */          
 /*         VIEW      BOZO.PDSE              Initial edit macro set */          
 /* Command ===>                                                    */          
 /* Confer also Command ===> edset                                  */          
 /*        and edit profile IMACRO.                                 */          
                                                                                
 /* Function is according to the member name:                       */          
 /* vu:    View UTF-8 file converted to EBCDIC terminal codepage.   */          
 /*        Edit UTF-8 file if we add a last parameter 'e' or 'E'    */          
 /*        to either the rexx or the edit macro.                    */          
 /* vuhex: View UTF-8 in hex (unchanged hex code)                   */          
 /* eu:    Edit UTF-8 file displayed in EBCDIC terminal codepage    */          
 /* euhex: Edit UTF-8 in hex                                        */          
 /* Same code in the four rexx.                                     */          
                                                                                
 /* If the name of the rexx does not begin by 'E'                */             
 /* and in the case there are parameters, the last one is        */             
 /* not 'e' or 'E', then                                         */             
 /* View a MVS library member or a MVS sequential data set       */             
 /* or a z/OS Unix file                                          */             
 /* (member or sequential data set or z/OS Unix file             */             
 /*  already in UTF-8 is converted to terminal codepage)         */             
 /* otherwise use Edit instead of View.                          */             
                                                                                
 /* vu: UTF-8 to EBCDIC terminal codepage conversion by          */             
 /*     ISPF service View or Edit.                               */             
 /* May be used with a dbrmlib member.                           */             
                                                                                
 /* Notes:                                                       */             
 /* ISPF 3.17 also uses a command 'vu' to visualize              */             
 /* UTF-8 z/OS Unix files.                                       */             
 /* Terminal codepage is in ISPF variable ztermcp5.              */             
                                                                                
 /* Examples of use for VU:                                      */             
 /*                                                              */             
 /* 1) As a rexx, in a member list:                              */             
 /*         VIEW      BOZO.DBRMLIB                               */             
 /* Command ===>                                                 */             
 /*            Name     Prompt       Size                        */             
 /* vu_______ BOZO01              <--       View                 */             
 /* vu_______ BOZO02    e         <-- force Edit (e in Prompt)   */             
 /*                                                              */             
 /* 2) As a rexx on a command line:                              */             
 /* Command ==> tso vu BOZO.DBRMLIB(BOZO01)       <--       View */             
 /* Command ==> tso vu BOZO.DBRMLIB(BOZO01) e     <-- force Edit */             
 /*                                                              */             
 /* 3) As a rexx preserving lower case:                          */             
 /* Command ==> cmde                                             */             
 /* Enter TSO commands below:                                    */             
 /* ===> vu /u/bozo/bozo01.utf8                    <--      View */             
 /* ===> vu /u/bozo/bozo01.utf8 e              <-- e forces Edit */             
 /* ===> vu /u/bozo/bozo01.utf8 macro(a) parm(b) e <--      Edit */             
 /* ===> vu 'bozo.cntl(inutf8)' macro(a) parm(b)   <--      View */             
 /* ===> vu 'bozo.cntl(inutf8)' macro(a) parm(b) noutf8 e        */             
 /* It is possible to add View or Edit extra parameters          */             
 /*    and the special parameter noutf8 to remove                */             
 /*    the default parameter utf8.                               */             
 /*                                                              */             
 /* 4) As an edit macro:                                         */             
 /*            BOZO.DBRMLIB(BOZO01)                              */             
 /* Command ===> vu                         (vu e to force Edit) */             
 /* 000001 DBRM   `BOZO    BOZO01   – H Ï/   B                   */             
 /* 000002                                                       */             
 /* 000003 DBRM   ]       œ       £@·‰< Í· ‰        ‰ÌÍÎ!Í „!Í   */             
                                                                                
 trace o                                                                        
 parse source . . rexxname .    /* rexxname in upper case        */             
                                                                                
 address isredit                                                                
 'macro (parm)'                                                                 
 macro_rc = rc                                                                  
 select /* according to macro_rc                                 */             
                                                                                
 /*_______________ EDIT MACRO ___________________________________*/             
   when macro_rc = 0  then do /* it is an edit macro             */             
     '(save)   = user_state'                                                    
     '(dataset) = dataset'                                                      
     '(member)  = member'                                                       
     /* member = '' for a sequential data set                    */             
     if member <> '' then dataset = dataset"("member")"                         
                                                                                
     service = "view" /* default                                 */             
     /* If edit macro name begins by 'E' then Edit.              */             
     if left(rexxname,1) = 'E' then service = 'edit'                            
                                                                                
     /* If parm begins by dataset, remove it.                    */             
     a = translate(strip(word(parm,1),,"'"))                                    
     b = translate(dataset)                                                     
     if length(a) = length(b) then do /* same length             */             
        if a = b then                                                           
           parm = subword(parm,2) /* remove first word with dataset */          
     end /* if length(a) = length(b)                             */             
     else do /* not the same length                              */             
        parse var a a1 '('                                                      
        parse var b b1 '('                                                      
        if a1 = b1 then /* compare what is before left parent    */             
           parm = subword(parm,2) /* remove first word with dataset */          
     end /*     not the same length                              */             
                                                                                
     /* If last parameter is 'e' or 'E'  then Edit.              */             
     if parm = '' then parm = 'PARM' /* to avoid syntax error    */             
     /* word(string,0) gives: Incorrect call to routine          */             
     lastword = word(parm,words(parm)) /* last word of parm      */             
     if translate(lastword) = 'E' then do                /* Edit */             
        service = 'edit'                                                        
        parm = delword(parm,words(parm),1) /* remove last word   */             
     end /* if translate(lastword) = 'E'                    Edit */             
     if parm = 'PARM' then parm = '' /* reset to initial value   */             
                                                                                
     /* Add extra parameters to View or Edit in string extra.    */             
     /*                                                          */             
     /* With ISPF View and Edit service,                         */             
     /* only the last parameter of same name is used.            */             
     /* Thus if the four parameters                              */             
     /* macro(a) parm(a) macro(b) parm(b) are present,           */             
     /* macro(a) and parm(a) are ignored and                     */             
     /* macro(b) and parm(b) are used.                           */             
     /*                                                          */             
     /* If edit macro name contains 'HEX', try to use            */             
     /* edit command 'hex' transmitted thru macro() parameter.   */             
     if pos('HEX',rexxname) > 0   then extra = 'macro(hex)'                     
                                  else extra = 'macro(res)'                     
     extra = extra' 'parm /* last View or Edit parameter is used */             
     /* Process special parameter noutf8 if present.             */             
     wp = wordpos('NOUTF8',translate(parm))                                     
     if wp = 0 then extra = extra' utf8' /* 'noutf8' not present */             
     /* End of adding extra parameters to View or Edit           */             
                                                                                
     address ispexec                                                            
       'control errors return'                                                  
                                                                                
       /* Set short and long message on next panel.              */             
       if service = 'edit' then do                       /* Edit */             
           zedsmsg = '>in EDIT<'     /* top right corner         */             
           zedlmsg = 'We are in Edit mode.'                                     
       end /* if service = 'edit'                           Edit */             
       else do                                           /* View */             
           zedsmsg = 'exit by can' /* top right corner           */             
           zedlmsg = 'We are in View, please exit with Command ===> can'        
       end                                               /* View */             
       "setmsg msg(isrz000)"                                                    
                                                                                
       /* View or Edit                                           */             
       /* A z/OS Unix file begins by '/' or '.'.                 */             
       if pos(left(dataset,1),'/.') = 0 then                                    
            service "dataset('"dataset"') "extra    /* MVS       */             
       else service "file(dataset)        "extra    /* z/OS Unix */             
       xrc = rc                                                                 
       if xrc > 4 then do /* Edit or View incorrect return code    */           
          say                                                                   
          say rexxname' had return code 'xrc                                    
          say 'when trying to 'service' 'dataset                                
          interpret "call set_"service"rc" /* set up message stem  */           
          /* say message for this return code                    */             
          interpret "say "service"rc.xrc"                                       
          say 'We exit with code 16.'                                           
          exit 16                                                               
       end                 /* Edit or View incorrect return code */             
                                                                                
     address /* from ispexec                                     */             
     'user_state = (save)'                                                      
     'end'                                                                      
     address /* from isredit                                     */             
     exit                                                                       
   end /* when macro_rc = 0             it is an edit macro      */             
                                                                                
 /*_______________ REXX _________________________________________*/             
   when macro_rc = 20 then do /* assume it is a rexx             */             
     parse arg dataset .                                                        
     parm = arg(1) /* dataset is first word of parm              */             
     dataset = strip(dataset,,"'")       /* remove quotes if any */             
     address ispexec                                                            
     'control errors return'                                                    
                                                                                
       call save_initial_macro /* reset at end if changed        */             
                                                                                
       if pos(left(dataset,1),'/.') = 0 then do           /* MVS */             
            /* Check MVS dataset existence.                      */             
            sysdsn_result = sysdsn("'"dataset"'")                               
            if sysdsn_result <> 'OK' then do                                    
               say                                                              
               say rexxname" sysdsn('"dataset"') gave result:"                  
               say sysdsn_result                                                
               say 'We exit with code 16.'                                      
               exit 16                                                          
            end /* if sysdsn_result <> 'OK'                      */             
            /* parm(parm) edit macro will inherit rexx parameters */            
            "view dataset('"dataset"') macro("rexxname") parm(parm)"            
       end /* MVS                                                */             
       /* If z/OS Unix file does not exist, it will be created   */             
       else "view file(dataset) macro("rexxname") parm(parm)"                   
       view_from_rexx_rc = rc                                                   
                                                                                
       if view_from_rexx_rc <> 0 then do                                        
          say                                                                   
          say rexxname" View from rexx gave rc = "view_from_rexx_rc             
               call restore_initial_macro                                       
               call set_viewrc /* set up message stem            */             
               /* say message for this return code               */             
               say viewrc.view_from_rexx_rc                                     
               say 'We exit with code 16.'                                      
               exit 16                                                          
       end /* if view_from_rexx_rc <> 0                          */             
                                                                                
       call restore_initial_macro                                               
                                                                                
     address /* from ispexec                                     */             
     exit                                                                       
   end /* when macro_rc = 20     assume it is a rexx             */             
                                                                                
 /*_______________ OTHERWISE ____________________________________*/             
   otherwise do /* macro_rc different of 0 and 20                */             
     say                                                                        
     say rexxname" macro_rc = "macro_rc                                         
     say "We exit with code 16."                                                
     exit 16                                                                    
   end /* otherwise                                              */             
                                                                                
 end /* select according to macro_rc                             */             
 /* end of rexx main part (we exit in select)                    */             
                                                                                
 /*_________________________________________________________________*/          
 save_initial_macro:                                                            
                                                                                
   address ispexec                                                              
   'control errors return'                                                      
     "vget zdaemac profile" /* variable in panel ISRUEDIT           */          
     /* (ISRUEDIT is "EDIT Entry Panel" obtained by S before        */          
     /* member name and a '/' in the prompt column).                */          
     /* Confer also Command ===> edset                              */          
     /*        and edit profile IMACRO.                             */          
     zdaemac_old = zdaemac  /* save to reset at exit if changed     */          
   address /* from ispexec                                          */          
   return                                                                       
 /*_________________________________________________________________*/          
 restore_initial_macro:                                                         
                                                                                
   /* If initial edit macro name changed as                         */          
   /* in View of a z/OS Unix directory,                             */          
   /* reset initial edit macro name to previous value.              */          
   address ispexec                                                              
   'control errors return'                                                      
     "vget zdaemac profile" /* variable in panel ISRUEDIT           */          
     if zdaemac <> zdaemac_old then do                                          
        zdaemac = zdaemac_old                                                   
        "vput zdaemac profile" /* restore                           */          
        /* to suppress: "verase zdaemac profile"                    */          
     end /* if zdaemac was changed                                  */          
   address /* from ispexec                                          */          
   return                                                                       
 /*_________________________________________________________________*/          
 set_viewrc: procedure expose viewrc.                                           
                                                                                
 /* Set up viewrc. message stem for ISPF View.                      */          
 /* viewrc.i contains the message for View return code i            */          
 viewrc.0  = "Normal completion."                                               
 viewrc.10 = "Member or generation (if specified) not found."                   
 viewrc.12 = "VIEW has been disabled through the ISPF configuration",           
             "table."                                                           
 viewrc.14 = "Member, sequential data set, or z/OS UNIX file in use."           
 viewrc.16 = "No members matched the pattern or no members in the PDS."         
 viewrc.18 = "VSAM data set was specified but VSAM processing",                 
             "not allowed."                                                     
 viewrc.20 = "Severe error; unable to continue."                                
 return                                                                         
 /*_________________________________________________________________*/          
 set_editrc: procedure expose editrc.                                           
                                                                                
 /* Set up editrc. message stem for ISPF Edit.                      */          
 /* editrc.i contains the message for Edit return code i            */          
 editrc.0  = "Normal completion; data was saved."                               
 editrc.4  = "Normal completion; data was not saved."                           
 editrc.10 = "Member or generation (if specified) not found."                   
 editrc.14 = "Member, sequential data set, or z/OS UNIX file in use."           
 editrc.12 = "YES was specified for the LOCK parameter."                        
 editrc.16 = "No members matched the pattern or no members in the PDS."         
 editrc.18 = "VSAM data set was specified but VSAM processing",                 
             "not allowed."                                                     
 editrc.20 = "Severe error; unable to continue."                                
 return                                                                         
 /*_________________________________________________________________*/          
