 /* rexx */                                                                     
 trace o                                                                        
 parse source . . rexxname .    /* rexxname in upper case                  */   
 /*                                                                        */   
 /*  Rexx to invoke macro given as a parameter.                            */   
 /*                                                                        */   
 /* It uses three other rexx: viewit, forallm and macedit.                 */   
 /*  In the invoked macro, kindly replace 'say' by 'queue'                 */   
 /*  as the content of the queue is 'pulled' then 'said' by MACEDIT        */   
 /*  to fit in the context in which MACEDIT is called.                     */   
 /*                                                                        */   
 /*  Example of use: (ISPF 3.4, on same line as dsname)                    */   
 /*   DSLIST - Data Sets Matching XX.YYYY.USER01                           */   
 /*   Command ===>                                                         */   
 /*   mac mac01 XX.YYYY.USER01.CNTL                                        */   
 /*   mac mac01 /        <-- Execute macro mac01 on all members            */   
 /*   mac mac01 /(*COMP*)                                                  */   
 /*   mac mac01 /(COMPCOB)                                                 */   
                                                                                
 if sysvar(sysispf) <> 'ACTIVE' then do                                         
   say rexxname 'must be invoked from ISPF, terminating!'                       
   exit 12                                                                      
 end                                                                            
 argu = arg(1)      /* argu can be modified                                */   
 w = words(argu)    /* number of words at right of MACEDIT                 */   
                                                                                
 if w <> 2 then do /* Not two words at right of MAC                        */   
    say rexxname arg(1)                                                         
    say 'There must be two parameters at right of 'rexxname'.'                  
    say 'The first one must be the macro to execute.'                           
    say 'The last one must be a library with possibly parents such as:'         
    say "        'XX.YYYY.USER01.LIB'"                                          
    say '         XX.YYYY.USER01.LIB'                                           
    say '         XX.YYYY.USER01.LIB(*)'                                        
    say '         XX.YYYY.USER01.LIB(*AB*)'                                     
    say '         XX.YYYY.USER01.LIB(*AB%)'                                     
    zispfrc = 12                                                                
    signal fin                                                                  
 end /* if w <> 2   Not two words at right of MAC                          */   
                                                                                
 mac   = word(argu,1)         /* first                                     */   
 dsn   = word(argu,w)         /* last                                      */   
                                                                                
 upper dsn                                                                      
 dsn = strip(dsn,,"'")                     /* remove quotes if any         */   
 dsnx = translate(dsn,'  ','()')           /* replace parent by blank      */   
 dsn0 = word(dsnx,1)                                                            
 call check_dsn   dsn0                                                          
 call check_dsorg dsn0                                                          
                                                                                
 /* member name must be a pattern to use rexx forallm                      */   
 specific_member = "no"                                                         
 select                                                                         
   when words(dsnx) = 1 then dsn = dsn'(*)'   /* add (*) to dsname         */   
   when words(dsnx) = 2 then do               /* member was specified      */   
        member = word(dsnx,2)                                                   
        if pos('%',member) = 0 & pos('*',member) = 0 then do                    
           specific_member = "yes"                                              
           call check_dsn     dsn                                               
        end /* if pos('%',member) = 0 & pos('*',member) = 0                */   
                                                                                
   end /* when words(dsnx) = 2                                             */   
   otherwise                                                                    
 end /* select                                                             */   
                                                                                
 address ispexec                                                                
 "control errors return"                                                        
                                                                                
 do queued(); pull ; end     /* Exhaust queue preventively.                */   
                                                                                
 if specific_member = "no" then                                                 
       call viewit "forallm macedit "mac" "dsn                                  
 else do /* specific_member = "yes"                                        */   
       say "dsn = "dsn                                                          
       say "mac = "mac                                                          
       "edit dataset('"dsn"') macro("mac")"                                     
 end /*     specific_member = "yes"                                        */   
                                                                                
 /* Say what has been queued by invoked macro and exhaust queue.           */   
 do queued(); pull line; say line; end                                          
                                                                                
 zispfrc = 0                                                                    
                                                                                
 say                                                                            
 /*________________________________________________________________________*/   
 /*                                                                        */   
 fin:                                                                           
   /*                                                                           
   if zispfrc > 0 then do                                                       
      say 'return code = 'zispfrc                                               
      say                                                                       
   end /* if zispfrc > 0                                                   */   
   */                                                                           
   address ispexec "vput zispfrc"                                               
   exit zispfrc                                                                 
 /*                                                                        */   
 /*________________________________________________________________________*/   
 check_dsn: procedure expose mac rexxname                                       
  parse arg dsn  /* dsn without quotes                                     */   
  msgs = msg("off")                                                             
     libelle = sysdsn("'"dsn"'")                                                
  msgs = msg(msgs)                                                              
  if libelle <> 'OK' then do                                                    
     say 'mac   = 'mac                                                          
     say 'dsn   = 'dsn' 'libelle                                                
     say rexxname' ends with rc = 16.'                                          
     zispfrc = 16                                                               
     signal fin                                                                 
  end /* if sysdsn("'"dsn"'") <> 'OK'                                      */   
  return                                                                        
                                                                                
 /*________________________________________________________________________*/   
 check_dsorg: procedure expose rexxname                                         
  parse arg dsn  /* dsn without quotes                                     */   
  rc = listdsi("'"dsn"'")                                                       
  xrc = rc                                                                      
  if xrc <> 0 then do                                                           
     say                                                                        
     say   "Listdsi on dsn "dsn" failed",                                       
           "with RC = "xrc" and reason = "sysreason                             
     queue "Dsn "dsn" was not processed."                                       
     say rexxname' ends with rc = 16.'                                          
     zispfrc = 16                                                               
     signal fin                                                                 
  end /* if xrc <> 0 Listdsi failed                                        */   
  dsorg = left(sysdsorg,2) /* remove unmovable if present                  */   
  /* End of obtain dataset organization dsorg 'PS' 'PO'.                   */   
  if dsorg <> 'PO' then do                                                      
     say                                                                        
     say   dsn" is not a library."                                              
     say   "Dsn "dsn" was not processed."                                       
     say rexxname' ends with rc = 16.'                                          
     zispfrc = 16                                                               
     signal fin                                                                 
  end /* if dsorg <> 'PO'                                                  */   
  return                                                                        
