/* rexx */                                                                      
/* Execute od (octal dump) Unix command.                      */                
/* If no option provided, the rexx generates option           */                
/* for an hexadecimal dump (BSD option -Xhc).                 */                
                                                                                
/* rexx is in SYSEXEC or SYSPROC concatenation,               */                
/* not in OMVS PATH.                                          */                
                                                                                
/* rexx can be called from either MVS or OMVS.                */                
                                                                                
trace o                                                                         
lang = "En_US.IBM-1140"      /* "Fr_FR.IBM-1147"              */                
                                                                                
/* Examples:                                                  */                
/* Calling from MVS:                                          */                
/*          VIEW      BOZO.LOAD                               */                
/*  Command ===>                                              */                
/*             Name     Prompt                                */                
/*  od_______ MEMBER01        <-- hex dump                    */                
                                                                                
/*  ISPF 3.4                                                  */                
/*           Data Sets Matching BOZO                          */                
/*  Command ===>                                              */                
/*                                                            */                
/*  Command - Enter "/" to select action                      */                
/*  ----------------------------------------------            */                
/*  od______ BOZO.SEQ01       <-- hex dump                    */                
                                                                                
/*  Command ===> tso od 'BOZO.LOAD(MEMBER1)'                  */                
/*  Command ===> cmde         <-- to preserve lower case      */                
/*  Enter TSO commands below:                                 */                
/*  ===> od 'BOZO.LOAD(MEMBER2)' -hc                          */                
/*  ===> od /u/bozo/test.txt  <-- full path needed            */                
                                                                                
/* Calling from OMVS:                                         */                
/*  Command ===> tso omvs                                     */                
/*  $ tso od /u/bozo/test.txt                                 */                
/*  $ tso od BOZO.SEQ01                                       */                
/*  $ exit                 (from OMVS)                        */                
/* End of examples.                                           */                
                                                                                
/*____________________________________________________________*/                
/* Build od z/OS Unix command.                                */                
                                                                                
parse arg dsn rest                                                              
                                                                                
rest = strip(rest)                                                              
rest0 = rest /* initial value after strip                     */                
if rest = '' then rest = '-Xhc' /* hexadecimal dump           */                
                     /*  '-A x -t x1z -v'    in bash          */                
                                                                                
cmd = 'od' rest /* Unix command                               */                
if rest0 <> '' then do /* od options were specified           */                
   say 'Generated z/OS Unix od command for bpxwunix:'                           
   say cmd                                                                      
end /* if rest0 <> ''                                         */                
                                                                                
/*____________________________________________________________*/                
/* Allocate STDIN.                                            */                
dsn = strip(dsn,,"'") /* remove quotes if any                 */                
parse var dsn dsn0 '(' member ')' .                                             
msgs = msg("off") /* HFS file will give messages              */                
   "alloc fi(stdin) da('"dsn"') shr reu"                                        
msgs = msg(msgs)                                                                
arc = rc                                                                        
if arc > 0 then do  /* dsn is a full path                     */                
   "alloc fi(stdin) path('"dsn"') pathopts(ordonly) reu"                        
   brc = rc                                                                     
   if brc > 0 then do                                                           
      say "STDIN allocate gave codes "arc" (MVS),",                             
                                      brc" (HFS or zFS)"                        
      exit(12)                                                                  
   end /* if brc > 0 */                                                         
end /* if arc > 0 */                                                            
                                                                                
/*____________________________________________________________*/                
/* Allocate STDOUT dsnprint dataset.                          */                
call set_up_prefix /* create prefix for new file              */                
time_stamp = t!!time('s')                                                       
parse source . . rexxname .                                                     
dsnprint = prefix"."rexxname"."time_stamp                                       
"allocate fi(stdout) da('"dsnprint"') reuse",                                   
"new catalog",                                                                  
"lrecl(160) recfm(f b) blksize(0)",                                             
"space(1 15) tracks"                                                            
arc = rc                                                                        
if arc > 0 then do                                                              
   say "STDOUT DSNPRINT allocate gave code "arc                                 
   exit(12)                                                                     
end /* if arc > 0 */                                                            
                                                                                
/*____________________________________________________________*/                
/* Initialize stem stderr.                                    */                
drop stderr.                                                                    
stderr.0 = 0                                                                    
                                                                                
/*____________________________________________________________*/                
/* Set up env. environment variables stem.                    */                
drop env.                                                                       
env.1 = "LANG="lang                                                             
env.0 = 1                                                                       
                                                                                
/*____________________________________________________________*/                
/* Execute Unix od command.                                   */                
                                                                                
bpxwunix_rc = bpxwunix(cmd,'DD:STDIN','DD:STDOUT',stderr.,env.)                 
/*____________________________________________________________*/                
/* Display result.                                            */                
                                                                                
if bpxwunix_rc = 0 then do                                                      
                                                                                
  /* Display DSNPRINT                                         */                
  address ispexec                                                               
    "control errors return"                                                     
    "control display line start(0)" /* if rexx called under OMVS      */        
    "view   dataset('"dsnprint"')"  /* dataid not provided under OMVS */        
    view_rc = rc                                                                
                                                                                
    if view_rc > 0 then do                                                      
       say "view for dataset "dsnprint" gave code "view_rc                      
       call clean_up_and_exit view_rc                                           
    end /* if view > 0                                        */                
                                                                                
  address                                                                       
end /* if bpxwunix_rc = 0                                     */                
                                                                                
else do /* bpxwunix_rc <> 0                                   */                
   if stderr.0 <> 0 then                                                        
      do i = 1 to stderr.0                                                      
         say 'stderr.'i' ='stderr.i                                             
      end                                                                       
   say 'bpxwunix_rc = 'bpxwunix_rc                                              
   call clean_up_and_exit bpxwunix_rc                                           
end /* bpxwunix_rc <> 0                                       */                
call clean_up_and_exit 0 /* normal exit                       */                
                                                                                
/*____________________________________________________________*/                
clean_up_and_exit:                                                              
                                                                                
parse arg exit_code                                                             
address tso                                                                     
"free fi(stdin,stdout)"                                                         
msgs = msg("off")                                                               
   "delete '"dsnprint"'"                                                        
msgs = msg(msgs)                                                                
exit exit_code                                                                  
                                                                                
/*___________________________________________________________________*/         
set_up_prefix:                                                                  
                                                                                
/* Set up new output file prefix.                                    */         
prefix = sysvar('syspref')              /* tso profile prefix        */         
uid    = sysvar('sysuid')               /* tso userid                */         
if prefix = '' then prefix = uid        /* use uid if null prefix    */         
if prefix <> '' & prefix <> uid then    /* different prefix than uid */         
   prefix = prefix'.'uid                /* use prefix.uid            */         
                                                                                
return                                                                          
/*___________________________________________________________________*/         
