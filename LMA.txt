/* rexx */                                                                      
trace o                                                                         
/* LMA Load Module Analyzer provided with Debug Tool */                         
/* AMBLIST                                           */                         
/*                                                   */                         
                                                                                
say "                                     "                                     
say "Example of use in ISPF 3.4:          "                                     
say "LMA      XX.YYYY.USERID.LOAD         "                                     
say "LMA      before dsname or member name"                                     
say "                                     "                                     
                                                                                
/* Please modify the first qualifiers for Debug Tool libraries */               
dtprfx="sys2.dbg.eqaw"                                                          
                                                                                
dsnprint_prefix = ""        /* Please change dataset high level qualifiers */   
                            /* for instance: dsnprint_prefix = "XX.YYYY"   */   
                                                                                
parse arg dsn .                                                                 
dsn = strip(dsn,,"'")                /* remove surrounding quotes */            
parse var dsn dsn '(' member ')' .   /* extract member if present */            
                                                                                
/* Build EQAIN control card                                 */                  
if member = "" then 'alloc fi(eqain) dummy reuse'                               
               else do /* member <> "" */                                       
                     "newstack"                                                 
                      queue "SELECT MEMBER="member                              
     'alloc fi(eqain) unit(vio) tracks sp(1) recfm(f) lrecl(80) reuse'          
                     "execio" queued() "diskw eqain (finis"                     
                     "delstack"                                                 
                    end /* member <> "" */                                      
/*                                                          */                  
/* Allocate EQAPRINT file                                   */                  
time_stamp = t!!time('s')                                                       
parse source . . rexxname .                                                     
if dsnprint_prefix = '' then                                                    
   dsnprint = userid()"."rexxname"."time_stamp                                  
else dsnprint = dsnprint_prefix"."userid()"."rexxname"."time_stamp              
"allocate fi(eqaprint) da('"dsnprint"')           reuse",                       
"new catalog",                                                                  
"lrecl(121) recfm(f b a) blksize(0)",                                           
"space(1 15) tracks"                                                            
arc = rc                                                                        
if arc > 0 then do                                                              
   say "LMA EQAPRINT allocate gave code "arc                                    
   exit(12)                                                                     
end /* if arc > 0 */                                                            
/*                                                          */                  
"alloc fi(eqasyspf) da('"dtprfx".seqatlib(eqalmpfx)') shr reuse"                
"alloc fi(eqapgmnm) da('"dtprfx".seqatlib(eqalmpgm)') shr reuse"                
"alloc fi(eqalib)   da('"dsn"')                       shr reuse"                
                                                                                
"call *(eqalma) ",                                                              
"'NATLANG=ENU,LISTLD,LEINFO,COMPOPTS,LOUD,SHOWLIB,DATEFMT=YYYYMMDD'"            
                                                                                
/* Clean up                                                 */                  
"free fi(eqain eqaprint eqasyspf eqapgmnm eqalib)"                              
                                                                                
/* Allocate input library                                   */                  
"alloc fi(ddn) da('"dsn"') shr reuse"                                           
/* End of allocating input library        */                                    
/*                                                          */                  
/* Building SYSIN control card                              */                  
"newstack"                                                                      
if member = "" then queue " LISTIDR  OUTPUT=ALL,DDN=DDN"                        
               else do  /* member <> "" */                                      
                    queue " LISTIDR  OUTPUT=ALL,DDN=DDN,MEMBER="member          
           /* queue " LISTLOAD OUTPUT=XREF,DDN=DDN,MEMBER="member */            
                    end /* member <> "" */                                      
'alloc fi(sysin) unit(vio) tracks sp(1)   reuse'                                
   "execio" queued() "diskw sysin (finis"                                       
"delstack"                                                                      
/*                                                          */                  
/* Allocate SYSPRINT file                                   */                  
"allocate fi(SYSPRINT) da('"dsnprint"')           reuse",                       
"mod catalog"                                                                   
brc = rc                                                                        
if brc > 0 then do                                                              
   say "AMBLIST SYSPRINT allocate gave code "brc                                
   exit(12)                                                                     
end /* if brc > 0 */                                                            
/*                                                          */                  
/* Execute AMBLIST                                          */                  
'amblist'                                                                       
xrc = rc                /* save amblist return code */                          
if xrc > 0 then do                                                              
   say "AMBLIST execution gave code "xrc                                        
   exit(12)                                                                     
end /* if xrc > 0 */                                                            
/*                                                          */                  
/* Display SYSPRINT                                         */                  
"ispexec lminit dataid(dd1) dataset('"dsnprint"') enq(shr)"                     
"ispexec view   dataid("dd1")"                                                  
                                                                                
/* Clean up                                                 */                  
"free fi(sysprint ddn)"                                                         
"ispexec lmfree dataid("dd1")"                                                  
x = msg("off")                                                                  
address tso                                                                     
"delete '"dsnprint"'"                                                           
x = msg(x)                                                                      
                                                                                
exit                                                                            
