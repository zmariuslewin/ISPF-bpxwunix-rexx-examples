/* rexx */                                                                      
trace o                                                                         
                                                                                
/*____________________________________________________________________________*/
/*                                                                            */
/* Help starts                                                                */
/* Relinkedit/rebind a load module/program object.                            */
/*                                                                            */
/* Syntax: Command ===> tso relink dsn(member) parameter(s)                   */
/*                                                                            */
/* If zero parameter follows dsn(member) then show help                       */
/*    and relink JCL with control statements examples to edit                 */
/*    in a file.                                                              */
/* If one parameter only follows dsn(member) then use binder statement        */
/*    SETOPT PARM(parameter)                                                  */
/*    and call binder                                                         */
/*    (in case parm is an 8 characters hex string,                            */
/*     prefix hex string by 'SSI=')                                           */
/* else use parameters as a full binder statement                             */
/*    and call binder.                                                        */
/*                                                                            */
/* relink   parameter(s) may be obtained from prompt field                    */
/*          if at most eight characters long.                                 */
/*                                                                            */
/* Example 1:                                                                 */
/*  Command ===> tso relink                                                   */
/*  generates help and JCL file to edit.                                      */
/*                                                                            */
/* Example 2:                                                                 */
/* XXXX    VIEW      BOZO.LOAD                                                */
/*  Command ===>                                                  Scroll ===> */
/*            Name     Prompt        Size       TTR      AC    AM  RM         */
/*  relink   COBOL01                 00001398   000015   01    31  ANY        */
/*  generates help and JCL file to edit. dsn and member indicated.            */
/*                                                                            */
/* Example 3:                                                                 */
/*  Command ===> tso relink 'BOZO.LOAD(COBOL01)' SSI=AA190206,REUS=RENT,AC=1  */
/*  will use binder statement        SETOPT PARM(SSI=AA190206,REUS=RENT,AC=1) */
/*  and call binder.                                                          */
/*                                                                            */
/* Example 4:                                                                 */
/*  Command ===> cmde                                                         */
/*  Enter TSO commands below:                                                 */
/*  ===> relink 'BOZO.LOAD(COBOL01)' INCLUDE SYSLIB(SUB01)                    */
/*  will use binder statement        INCLUDE SYSLIB(SUB01)                    */
/*  and call binder.                                                          */
/*  dsn is allocated to SYSLIB.                                               */
/*                                                                            */
/* Example 5:                                                                 */
/* XXXX    VIEW      BOZO.LOAD                                                */
/*  Command ===>                                                  Scroll ===> */
/*            Name     Prompt        Size       TTR      AC    AM  RM         */
/*  relink   COBOL01  RMODE=24       00001398   000015   01    31  ANY        */
/*                                                                            */
/* Result:                                                                    */
/* XXXX    VIEW      BOZO.LOAD                                                */
/*  Command ===>                                                  Scroll ===> */
/*            Name     Prompt        Size       TTR      AC    AM  RM         */
/*  ________ COBOL01                 00001398   000015   01    31  24         */
/*____________________________________________________________________________*/
/* Help ends                                                                  */
/*                                                                            */
                                                                                
/*__________________________________________________________*/                  
/* Get parameters                                           */                  
                                                                                
parse arg dsn0 parm                                                             
                                                                                
dsn = strip(dsn0,,"'") /* remove quotes if any              */                  
parse var dsn dsn '(' member ')'                                                
if member = '' then do                                                          
   say ' Load module/program object missing.'                                   
   say " Kindly press enter."                                                   
   call show_help                                                               
   exit                                                                         
end /* if member = ''                                       */                  
                                                                                
if parm = '' then do                                                            
   say " No Parameter(s) were present with "dsn0"."                             
   say " Kindly press enter."                                                   
   call show_help                                                               
   exit                                                                         
end /* if parm = ''                                         */                  
                                                                                
/*__________________________________________________________*/                  
/* Allocate SYSLIB      <-- input                           */                  
"alloc fi(syslib) da('"dsn"') shr reu"                                          
   alloc_syslib_rc = rc                                                         
   call check_rc alloc_syslib_rc,0,'alloc fi(syslib)'                           
                                                                                
/* Allocate SYSLMOD     <-- output                          */                  
"alloc fi(syslmod) da('"dsn"') shr reu"                                         
   alloc_syslmod_rc = rc                                                        
   call check_rc alloc_syslmod_rc,0,'alloc fi(syslmod)'                         
                                                                                
/* Allocate SYSPRINT                                        */                  
"alloc fi(sysprint) dummy reu" /* da(*) instead of dummy    */                  
   alloc_sysprint_rc = rc                                                       
   call check_rc alloc_sysprint_rc,0,'alloc fi(sysprint)'                       
                                                                                
/* Allocate SYSUT1                                          */                  
"alloc fi(sysut1) unit(vio) cyl space(2 2) reu"                                 
   alloc_sysut1_rc = rc                                                         
   call check_rc alloc_sysut1_rc,0,'alloc fi(sysut1)'                           
                                                                                
/*__________________________________________________________*/                  
/* Allocate SYSLIN control cards dataset.                   */                  
"allocate fi(syslin) unit(vio) reu",                                            
"lrecl(80) recfm(f b) blksize(0)",                                              
"space(1 15) tracks"                                                            
   alloc_syslin_rc = rc                                                         
   call check_rc alloc_syslin_rc,0,'alloc fi(syslin)'                           
                                                                                
/*__________________________________________________________*/                  
/* Set IEWL SYSLIN control cards.                           */                  
newstack                                                                        
queue ' INCLUDE  -ATTR,-ALIASES,SYSLIB('member')'                               
/* -ATTR:   The attributes which are copied are:                    */          
/*          AC, AMODE, DC, OL, REUS, RMODE, SSI, TEST, entry point, */          
/*          DYNAM and MIGRATABLE.                                   */          
/*                                                                  */          
if length(parm) = 8 & verify(parm,'0123456789ABCDEF') = 0 then                  
   parm = 'SSI='parm                                                            
if words(parm) = 1 then /* only one parameter                       */          
   queue " SETOPT   PARM("parm")"                                               
/* SETOPT   overrides PARM and INCLUDE -ATTR                        */          
/* SETOPT   example:                                                */          
/* SETOPT   PARM(OVLY=NO,TEST=NO,OL=NO,DC=NO,EDIT,REUS=RENT,        */          
/*          SSI=01118876,AC=0,AMODE=ANY,RMODE=24,NOLONGPARM)        */          
/* Note for REUS= parameter: NONE < SERIAL < RENT < REFR            */          
/*                                                                  */          
else queue ' 'parm      /* two or more parameters                   */          
queue ' NAME     'member'(R)'                                                   
"execio "queued()" diskw SYSLIN (fini"                                          
   SYSLIN_execio_rc = rc                                                        
   call check_rc SYSLIN_execio_rc,0,'SYSLIN execio'                             
delstack                                                                        
                                                                                
/*__________________________________________________________*/                  
/* Execute linkedit/binder.                                 */                  
                                                                                
"call *(iewl) ",                                                                
"'LIST,XREF'"                                                                   
                                                                                
/*__________________________________________________________*/                  
/* Clean up                                                 */                  
"free fi(syslib syslmod sysprint sysut1 syslin)"                                
exit                                                                            
                                                                                
 /*_________________________________________________________________________*/  
 /* Called subroutines                                                      */  
                                                                                
 check_rc:                                                                      
  /* call example:    call check_rc rc,0,'libdef isptlib'                   */  
  /* In case of error:                                                          
  ZEDMSGNO (message identifier), ZEDISMSG (short message text) and ZEDILMSG     
  */                                                                            
  if arg(1)<=arg(2) then return                        /* rc=0              */  
  if zerrmsg <> '' then address ispexec 'setmsg msg('zerrmsg')'                 
  /* ISPEXEC or ISREDIT error:                                              */  
  if ZERRSM   <> 'ZERRSM'   then say 'ZERRSM   = 'ZERRSM                        
  if ZERRLM   <> 'ZERRLM'   then say 'ZERRLM   = 'ZERRLM                        
  if ZEDMSGNO <> 'ZEDMSGNO' then say 'ZEDMSGNO = 'ZEDMSGNO                      
  if ZEDISMSG <> 'ZEDISMSG' then say 'ZEDISMSG = 'ZEDISMSG                      
  if ZEDILMSG <> 'ZEDILMSG' then say 'ZEDILMSG = 'ZEDILMSG                      
  if debug='DEBUG' then                                                         
    say 'FUNC='arg(3) 'RC='arg(1)                                               
  else say 'rc = 'arg(1)                                                        
  exit arg(1)                                                                   
                                                                                
 /*________________________________________________________________________*/   
 show_help: procedure expose dsn member                                         
                                                                                
  newstack                                                                      
  queue left('/* Help and JCL file to edit. F3 to exit.',78)'*/'                
  /* Show help between 'Help starts' and 'Help ends'                       */   
  help = 'no'                                                                   
  do i = 1 to sourceline()                                                      
     if pos('Help starts',sourceline(i)) > 0 then do                            
        help = "yes"                                                            
        iterate                                                                 
     end /* if pos('Help starts',sourceline(i)) > 0                        */   
     if pos('Help ends',sourceline(i)) > 0 then leave                           
     if help = 'yes' then queue sourceline(i)                                   
  end /* do i = 1 to sourceline()                                          */   
                                                                                
  queue '//*                                            '                       
  queue '//* Please add a JOB card and change control cards.'                   
  queue '//* An asterisk in column 1, in a control card, indicates a comment.'  
  queue '//* To save data, use cre, repl or cut.        '                       
  queue '//* This temporary file disappears when you press F3.'                 
  queue '//*                                            '                       
  queue '//         EXPORT SYMLIST=*                    '                       
  queue '//         SET DSN='dsn                                                
  queue '//         SET MEMBER='member                                          
  queue '//*                                            '                       
  queue '//LKED     EXEC PGM=IEWL,PARM=(LIST,XREF)      '                       
  queue '//SYSPRINT DD  SYSOUT=*                        '                       
  queue '//SYSLIB   DD  DISP=SHR,DSN=&DSN               '                       
  queue '//SYSLMOD  DD  DISP=SHR,DSN=&DSN               '                       
  queue '//SYSUT1   DD  UNIT=VIO,DISP=NEW,SPACE=(CYL,(2,2))'                    
  queue '//SYSLIN   DD  *,SYMBOLS=EXECSYS               '                       
  queue '  INCLUDE  -ATTR,-ALIASES,SYSLIB(&MEMBER)      '                       
  queue '* -ATTR:   The attributes which are copied are:'                       
  queue '*          AC, AMODE, DC, OL, REUS, RMODE, SSI, TEST, entry point,'    
  queue '*          DYNAM and MIGRATABLE.               '                       
  queue '*                                              '                       
  queue '* SETOPT   PARM(........)         Overrides PARM and INCLUDE -ATTR'    
  queue '* Example:                                     '                       
  queue '* SETOPT   PARM(OVLY=NO,TEST=NO,OL=NO,DC=NO,EDIT,REUS=RENT,  '         
  queue '*          SSI=AF&LYYMMDD,AC=0,AMODE=ANY,RMODE=24,NOLONGPARM)'         
  queue "* Google search: 'binder options table inurl:IBM' "                    
  queue '* Note for REUS= parameter: NONE < SERIAL < RENT < REFR      '         
  queue '*          if  REUS=RENT, normally parameter RENT at compile.'         
  queue '* Note:    if  AMODE=ANY, code should support it.            '         
  queue '*                                              '                       
  queue '* INCLUDE  MYDD(MEMBER2)    Add //MYDD to JCL  '                       
  queue '*                                              '                       
  queue '*          If not indicated, ENTRY point comes from -ATTR'             
  queue '  NAME     &MEMBER(R)  To not replace, change name or SYSLMOD'         
  queue ''                                                                      
                                                                                
  /* Allocate temporary file.                                  */               
  address tso                                                                   
  ddnm = 'dd'random(1,99999)    /* choose random ddname        */               
  msg_prev = msg(off)                                                           
  "alloc file("ddnm") unit(vio) new delete tracks space(1 1)",                  
  " reuse lrecl(80) recfm(f b) blksize(0)"                                      
     alloc_temp_rc = rc                                                         
     call check_rc alloc_temp_rc,0,'Alloc help temporary file'                  
  msg_off = msg(msg_prev)                                                       
  /* End of allocate temporary file.                           */               
                                                                                
  /* Write on temporary file.                                  */               
  "execio * diskw" ddnm "(fini"                                                 
   execio_temp_rc = rc                                                          
   call check_rc execio_temp_rc,0,'Execio on help temporary file'               
   delstack                                                                     
  /* End of write on temporary file.                           */               
                                                                                
  /* Edit temporary file.                                      */               
  address ispexec                                                               
    "control errors return"                                                     
    "lminit dataid(list) ddname("ddnm")"                                        
    "edit   dataid("list")"                                                     
    "lmfree dataid("list")"                                                     
    "free fi("ddnm")"                                                           
  address /* resume previous environment                       */               
  /* End of edit temporary file.                               */               
                                                                                
 return                                                                         
 /*________________________________________________________________________*/   
