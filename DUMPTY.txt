/* rexx */                                                                      
                                                                                
/* Logically DUMP files with ADRDDSU using ALLDATA(*) ALLX        */            
                                                                                
trace o                                                                         
parse arg filter .                                                              
/* filter designates the pattern of the files to dump.            */            
/* filter examples: ABC.DEF                                       */            
/*                  A%C.DEF.*GHI*   (% and * wild characters)     */            
                                                                                
/* Examples of use:                                               */            
/* 1) Command ===> tso dumpty BOZO.PDS                            */            
/*                                                                */            
/* 2) In ISPF 3.4:                                                */            
/* Command - Enter "/" to select action                           */            
/* -----------------------------------------------------------    */            
/* dumpty    BOZO.PDS          <-- dumpty before dsname           */            
                                                                                
filter = translate(filter)         /* filter in uppercase         */            
filter = strip(filter,,"'")        /* remove quotes if any        */            
parse var filter filter '(' .      /* remove member if present    */            
                                                                                
parse source var                                                                
rexxname = word(var,3)                                                          
                                                                                
call build_sysin                   /* ADRDSSU control cards       */            
call alloc_outdsn                  /* ADRDSSU output file         */            
"alloc fi(sysprint) da(*) shr reuse"                                            
                                                                                
run = '' /* or run = 'TYPRUN=NORUN'                               */            
/* Execute ADRDSSU                                                */            
"call *(adrdssu) '"run"'"                                                       
adrdssu_rc = rc                                                                 
if adrdssu_rc <> 0 then do                                                      
   say rexxname "Error in executing ADRDSSU."                                   
   say "adrdssu_rc = "adrdssu_rc                                                
   say "We exit with code 16."                                                  
   msg_prev = msg('off')                                                        
      "free fi(sysin,sysprint,outdd)"                                           
      "del '"outdsn"'"            /* delete                       */            
   msg_off  = msg(msg_prev)                                                     
   zispfrc = 16                                                                 
   if sysvar(sysispf) = 'ACTIVE' then address ispexec 'vput zispfrc'            
   exit zispfrc                                                                 
end /* adrdssu_rc <> 0                                            */            
                                                                                
/* normal exit                                                    */            
say                                                                             
say "Output ADRDSSU file '"outdsn"' created."                                   
msg_prev = msg('off')                                                           
    "free fi(sysin,sysprint,outdd)"                                             
msg_off  = msg(msg_prev)                                                        
zispfrc = 0                                                                     
if sysvar(sysispf) = 'ACTIVE' then address ispexec 'vput zispfrc'               
exit zispfrc                                                                    
                                                                                
/* ______________________________________________________________ */            
build_sysin: procedure expose rexxname filter                                   
/* rexxname and filter in input                                   */            
/* SYSIN file will contain ADRDSSU control cards (in uppercase).  */            
                                                                                
newstack                                                                        
queue ' DUMP DS ( INC (' filter ') ) +'                                         
queue '  OUTDD(OUTDD)                +'                                         
queue '  ALLDATA(*) ALLX             +'                                         
queue '  TOL(ENQF)                   +'                                         
queue '  SPHERE                      +'                                         
queue '  SHR                         '                                          
msg_prev = msg('off')                                                           
"alloc file(sysin) unit(vio)",                                                  
"tracks space(1,1) lrecl(80) recfm(f) reuse"                                    
alloc_rc = rc                                                                   
if alloc_rc <> 0 then do                                                        
   say rexxname "could not allocate the SYSIN file."                            
   say "We exit with code 16."                                                  
   say "alloc rc = "alloc_rc                                                    
   zispfrc = 16                                                                 
   if sysvar(sysispf) = 'ACTIVE' then address ispexec 'vput zispfrc'            
   exit zispfrc                                                                 
end /* if alloc_rc <> 0                                     */                  
msg_off  = msg(msg_prev)                                                        
/* End of allocate visualization file.                      */                  
                                                                                
/* Write on SYSIN file.                                     */                  
address MVS "execio "queued()" diskw sysin (finis"                              
execio_rc = rc                                                                  
delstack                                                                        
if execio_rc <> 0 then do                                                       
   say rexxname "could not write on SYSIN file."                                
   say "execio rc = "execio_rc                                                  
   say "We exit with code 16."                                                  
   "free fi(sysin)"                                                             
   zispfrc = 16                                                                 
   if sysvar(sysispf) = 'ACTIVE' then address ispexec 'vput zispfrc'            
   exit zispfrc                                                                 
end /* if execio_rc <> 0                                          */            
/* End of write on SYSIN file.                                    */            
                                                                                
return                                                                          
                                                                                
/* ______________________________________________________________ */            
alloc_outdsn: procedure expose rexxname filter outdsn                           
/* rexxname and filter in input                                   */            
/* outdsn              in output                                  */            
/* outdsn is ADRDDSU DUMP file                                    */            
                                                                                
call set_up_prefix /* create prefix for new file                  */            
quallist = translate(filter,' ','.')      /* qualifier list       */            
lastqual = word(quallist,words(quallist)) /* last qualifier       */            
lastqual = translate(lastqual,'XX','*%')  /* replace wild char    */            
ran  = right(random(1,99999),5,'0')                                             
outdsn   = prefix"."rexxname"."lastqual".R"ran                                  
msg_prev = msg('off')                                                           
"alloc file(outdd) da('"outdsn"') new catalog",                                 
"tracks space(50,500) reuse recfm(u) blksize(27998)"                            
alloc_rc = rc                                                                   
if alloc_rc <> 0 then do                                                        
   say rexxname "could not allocate the output file "outdsn                     
   say "alloc rc = "alloc_rc                                                    
   say "We exit with code 16."                                                  
   "free fi(sysin)"                                                             
   zispfrc = 16                                                                 
   if sysvar(sysispf) = 'ACTIVE' then address ispexec 'vput zispfrc'            
   exit zispfrc                                                                 
end /* if alloc_rc <> 0                                           */            
msg_off  = msg(msg_prev)                                                        
                                                                                
return                                                                          
                                                                                
/* ______________________________________________________________ */            
set_up_prefix:                                                                  
                                                                                
/* Set up new output file prefix.                                 */            
prefix = sysvar('syspref')           /* tso profile prefix        */            
uid    = sysvar('sysuid')            /* tso userid                */            
if prefix = '' then prefix = uid     /* use uid if null prefix    */            
if prefix <> '' & prefix <> uid then /* different prefix than uid */            
   prefix = prefix'.'uid             /* use prefix.uid            */            
                                                                                
return                                                                          
 /*_______________________________________________________________*/            
