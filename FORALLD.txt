  /* rexx */                                                                    
  trace o                                                                       
  parse arg command                                                             
  parse source . . rexxname .                                                   
                                                                                
  /*______________________________________________________________*/            
  /* Command contains a level with at least one '*' or '%'.       */            
  /* We execute the command for each dsname contained in level.   */            
  /* Examples:                                                    */            
  /* Command ===> tso foralld whohas XX.YY%G.**.LOADA*            */            
  /* Command ===> tso viewit foralld whohas XX.YY%G.**.LOADA*     */            
  /*______________________________________________________________*/            
  /*                                                              */            
                                                                                
  /* Find level in command                                        */            
  /* (in first word from left to contain a '*' or a '%').         */            
                                                                                
  w = words(command)                                                            
  do i=1 to w                                                                   
     if pos('*',word(command,i)) > 0 then leave                                 
     if pos('%',word(command,i)) > 0 then leave                                 
  end /* do i=1 to w                                              */            
                                                                                
  /*______________________________________________________________*/            
                                                                                
  if i > w then do      /* '*' or '%' in no word of command       */            
  /* Incorrect level in command (missing or with no * or %)       */            
                                                                                
     say                                                                        
     say 'Command 'command                                                      
     say 'does not contain a word with at least a * or % present.'              
     say 'The level cannot be determined.'                                      
     parse source . . rexxname .                                                
     say 'rexx 'rexxname' exits.'                                               
     say                                                                        
     address ispexec                                                            
     'control errors return'                                                    
     zispfrc = 20                                                               
     'vput zispfrc'                                                             
     exit zispfrc                                                               
                                                                                
  end /* if i > w                                                */             
  /*_____________________________________________________________*/             
  /* We shall replace level by dsn for each dsn included in level */            
                                                                                
  head = subword(command,1,i-1)  /* before level                 */             
                                                                                
  generic = word(command,i)                                                     
  parse var generic level '(' rest                                              
  /* level will be replaced by dsn                               */             
                                                                                
  tail = subword(command,i+1)    /* after  level                 */             
                                                                                
  /*_____________________________________________________________*/             
  address ispexec                                                               
  'control errors return'                                                       
                                                                                
  /*                  S T U C T U R E                                           
                                                                                
   lmdinit            provide a level                                           
      lmdlist           obtain dataset                                          
        process         rexx with explicit dsn                                  
   lmdfree                                                                      
                                                                                
  */                                                                            
                                                                                
  "lmdinit listid(lidv)  level("level")"                                        
  lmdinitrc = rc                                                                
  if lmdinitrc = 0 then                                                         
    do /* lmdinit OK                                             */             
      dsn = "                  "                                                
      keepon = "yes"                                                            
      do until keepon = "no "                                                   
        "lmdlist listid("lidv") option(list) dataset(dsn) stats(yes)"           
        lmdlistrc = rc                                                          
        select /* according to lmdlistrc                         */             
          when lmdlistrc = 0  then do /* dsn found               */             
               saveenv = address()                                              
               address TSO                                                      
                 call process /* dsn                             */             
               address value saveenv                                            
            end /* lmdlistrc = 0  dataset found                  */             
          when lmdlistrc = 8 then keepon = "no " /* end of list  */             
          otherwise /* lmdlistrc not 0 and not 8, error          */             
               say_error('lmdlist' lmdlistrc 'dsn')                             
        end /* select according to lmdlistrc                     */             
      end /* do until keepon = "no "                             */             
      "lmdfree listid("lidv")"                                                  
    end /* lmdinitrc = 0                                         */             
  else /* lmdinit failed                                         */             
         say_error('lmdinit' lmdinitrc 'level')                                 
  zispfrc = 0                                                                   
  'vput zispfrc'                                                                
  exit zispfrc                                                                  
  /*_____________________________________________________________*/             
  say_error: procedure expose level dsn zerrlm                                  
    parse arg function thisrc atlevel                                           
    say ' '                                                                     
    say function' error:'                                                       
    if atlevel = 'dsn' then say 'dsn    = 'dsn                                  
                       else say 'level  = 'level                                
    say function' failed with rc = 'thisrc                                      
    say         "ZERRLM  = '"strip(zerrlm)"'"                                   
    say ' '                                                                     
    zispfrc = 16                                                                
    'vput zispfrc'                                                              
    exit zispfrc                                                                
  /*_____________________________________________________________*/             
  process:                                                                      
                                                                                
    if checkdsn(dsn) > 0 then return                                            
                                                                                
    say                                                                         
    say "dsn = "dsn                                                             
    say 'in process'                                                            
 /* Execute specific command.                                    */             
 /* level replaced by dsn                                        */             
    if rest = '' then specific_command = head' 'dsn' 'tail                      
                 else specific_command = head' 'dsn'('rest' 'tail               
    say "We execute: "specific_command                                          
                                                                                
    interpret 'specific_command' /* command executed here        */             
                                                                                
 /* End of execute specific command.                             */             
    return                                                                      
  /*_____________________________________________________________*/             
    checkdsn: procedure expose rexxname                                         
    /* Check syntax and existence.                               */             
    /* dsn assumed in upper characters                           */             
    parse arg dsn                                                               
                                                                                
    dsn_msg = sysdsn("'"dsn"'")                                                 
    if dsn_msg <> 'OK' then do                                                  
       say "Dsname "dsn" is not correct: "dsn_msg                               
       say "___________________________________________________________"        
       say " "                                                                  
       say "Error in "rexxname                                                  
       say "       dsname = "dsn                                                
       say "Do not process."                                                    
       say "___________________________________________________________"        
       say " "                                                                  
       return 4                                                                 
    end /* if sysdsn("'"dsn"'") <> 'OK'                          */             
                                                                                
    return 0                                                                    
  /*_____________________________________________________________*/             
