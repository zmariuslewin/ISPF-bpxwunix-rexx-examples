 /* rexx */                                                                     
 trace o                                                                        
 parse source . . rexxname .    /* rexxname in upper case                  */   
 /*                                                                        */   
 /*  Rexx to invoke macro given as a parameter.                            */   
 /*                                                                        */   
 /*  In the invoked macro, kindly replace 'say' by 'queue'                 */   
 /*  as the content of the queue is 'pulled' then 'said' by MACEDIT        */   
 /*  to fit in the context in which MACEDIT is called.                     */   
 /*                                                                        */   
 /*  Example of use:                                                       */   
 /*  Command ===> cmde                                                     */   
 /*  viewit forallm macedit mac01 parm1 parm2 USER01.TEST(*)               */   
 /*  Explanation:                                                          */   
 /*  For all members (forallm) of USER01.TEST, we call rexx MACEDIT        */   
 /*  which invoke macro mac01 with one parm made of 'parm1 parm2'.         */   
 /*  Viewit will gather all 'say' in a file to be viewed.                  */   
                                                                                
 if sysvar(sysispf) <> 'ACTIVE' then do                                         
   say rexxname 'must be invoked from ISPF, terminating!'                       
   exit 12                                                                      
 end                                                                            
                                                                                
 /* Obtain command to execute (dsname(member) at end)                      */   
 /* say 'arg(1)  = 'arg(1)                                                 */   
 argu = arg(1)      /* argu can be modified                                */   
 w = words(argu)    /* number of words at right of MACEDIT                 */   
                                                                                
 select /* according to w                                                  */   
                                                                                
   when w < 2 then do /* less than two words at right of MACEDIT           */   
      say 'There must be at least two parameters at right of 'rexxname'.'       
      say 'The first one must be the macro to execute.'                         
      say 'The last one must be a library with possibly parents such as:'       
      say "        'XX.YYYY.USER01.LIB'"                                        
      say '         XX.YYYY.USER01.LIB'                                         
      say '         XX.YYYY.USER01.LIB(*)'                                      
      say '         XX.YYYY.USER01.LIB(*AB*)'                                   
      say '         XX.YYYY.USER01.LIB(*AB%)'                                   
      say 'Intermediate parameters make the parameter to the macro.'            
      zispfrc = 12                                                              
      signal fin                                                                
   end /* when w < 2 less than two words at right of MACEDIT               */   
                                                                                
   when w > 1 then do /* two or more words at right of MACEDIT             */   
      mac   = word(argu,1)         /* first                                */   
      dsn   = word(argu,w)         /* last                                 */   
      parm0 = subword(argu,2,w-2)  /* rest, empty if w = 2                 */   
   end /* when w > 1 two or more words at right of MACEDIT                 */   
                                                                                
   otherwise                                                                    
 end /* select according to w, number of words at right of MACEDIT         */   
                                                                                
 upper dsn                                                                      
 dsn = strip(dsn,,"'")                     /* remove quotes if any         */   
                                                                                
 /* Check dsn                                                              */   
 msgs = msg("off")                                                              
    libelle = sysdsn("'"dsn"'")                                                 
 msgs = msg(msgs)                                                               
 if libelle <> 'OK' then do                                                     
    say 'mac   = 'mac                                                           
    say 'parm0 = 'parm0                                                         
    say 'dsn   = 'dsn' 'libelle                                                 
    say rexxname' ends with rc = 12.'                                           
    zispfrc = 12                                                                
    signal fin                                                                  
 end /* if sysdsn("'"dsn"'") <> 'OK'                                       */   
                                                                                
 address ispexec                                                                
 "control errors return"                                                        
                                                                                
 do queued(); pull ; end     /* Exhaust queue preventively.                */   
                                                                                
 "edit dataset('"dsn"') macro("mac") parm(parm0)"                               
 /* Invoked macro may see parm0 as several parameters.                     */   
 /*                                                                             
 xrc = rc                                                                       
 say 'edit rc = 'xrc                                                            
 */                                                                             
 /* No single quote around parm0 which may contain blanks and              */   
 /* lower case characters. Max length of parm0 is 200.                     */   
 /* The invoked macro may contain:                                         */   
 /* 'isredit macro (parm1,parm2)'                                          */   
 /*          where parm1 = word(parm0,1) and parm2 = word(parm0,2)         */   
                                                                                
 /* Say what has been queued by invoked macro and exhaust queue.           */   
 do queued(); pull line; say line; end                                          
                                                                                
 /*                                                                             
 say "arg(1) = "arg(1)                                                          
 address ispexec 'vget zdllcmd shared'                                          
 say 'zdllcmd = 'zdllcmd                                                        
 /* this works:                                                            */   
 call viewit "forallm macedit mac01 parm1 parm2 USER01.TEST(*)"                 
 exit                                                                           
 */                                                                             
                                                                                
 zispfrc = 0                                                                    
                                                                                
 say                                                                            
 /*________________________________________________________________________*/   
 /*                                                                        */   
 fin:                                                                           
   /*                                                                           
   if zispfrc > 0 then do                                                       
      say 'return code = 'zispfrc                                               
      say                                                                       
   end /* if zispfrc > 0                                                   */   
   */                                                                           
   address ispexec "vput zispfrc"                                               
   exit zispfrc                                                                 
 /*                                                                        */   
 /*________________________________________________________________________*/   
