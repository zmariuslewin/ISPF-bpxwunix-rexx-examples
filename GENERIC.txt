/* rexx */                                                                      
trace o                                                                         
/* Edit macro with invariant code,                           */                 
/* parm (maximum 200 characters) and queue controlled.       */                 
/* Interpret commands from parm;                             */                 
/* if 'q' present in parm, interpret statements from stack,  */                 
/* or both.                                                  */                 
                                                                                
/* ____ Example of use: _____________________________________                   
address tso                                                                     
  dsn = "abc.def(mbr1)"                                                         
  /* parm = 'hex;q;res'                                      */                 
  /* parm = 'q'                                              */                 
  parm = 'hex;res;q'   /* parm at maximum 200 characters     */                 
                                                                                
  /* parm contains:                                          */                 
  /* 1) edit commands or                                     */                 
  /* 2) macros or                                            */                 
  /* 3) special command q which tells:                       */                 
  /*    pull lines from stack and interpret them,            */                 
  /* separated by ";"                                        */                 
                                                                                
  'newstack'                                                                    
  /* queue statements to be interpreted by edit macro        */                 
  queue "z = 1 + 4"                                                             
  queue "'(dsn) = dataset'" /* edit commands in quotes       */                 
  queue "'c aBc DeF'"                                                           
  queue "say dsn z"                                                             
  /* change 4 char string 'abc ' in 3 char string 'a b'      */                 
     queue "'c  ''abc ''  ''a b''  all'"                                        
  /* queue "'c  ""abc ""  ""a b""  all'"       is also Ok    */                 
address ispexec                                                                 
  "control errors return"                                                       
  "view dataset('"dsn"') macro(generic) parm(parm)"                             
address                                                                         
  'delstack'                                                                    
Note: If length(parm) <= 200, it is also possible to use:                       
  "control nondispl enter"                                                      
  parm = ";hex;res"                                                             
  "view dataset('"dsn"') macro(nop) parm(parm)"                                 
  /* There is no macro nop */                                                   
End of note                                                                     
 ______ End of example of use ______________________________ */                 
                                                                                
address isredit                                                                 
  "macro (parm)"                                                                
                                                                                
  str = parm                                                                    
  if str <> '' then do                                                          
     str = str';'      /* to parse with ';' last command     */                 
     do while pos(';',str) > 0                                                  
                                                                                
        /* Obtain cmd                                        */                 
        parse var str cmd  ';' str   /* split str            */                 
                                                                                
        /* Process special command q                         */                 
        if strip(translate(cmd)) = 'Q' then                                     
           do queued()                                                          
              parse pull line                                                   
              interpret line                                                    
           end /* do queued()                                */                 
                                                                                
        /* edit command or macro:                            */                 
        else do                                                                 
          interpret cmd                                                         
        end                                                                     
                                                                                
     end /* do while pos(';',str) > 0                        */                 
  end /* if str <> ''                                        */                 
                                                                                
address                                                                         
exit                                                                            
/*___________________________________________________________*/                 
