//USER01   JOB ,CLASS=X,TIME=6                                                  
/*JOBPARM L=9999,BYTES=999999                                                   
//*_________________________________________________________________            
//*       Search of generic member in generic libraries                         
//*       (source, load, etc...)                                                
//*_________________________________________________________________            
//*       Where is member &MEMBER                                               
//*       in files with dsname corresponding to &LEVEL?                         
//*       (Non migrated PDS or PDSE)                                            
//*_________________________________________________________________            
//*                                                                             
//        EXPORT SYMLIST=*                                                      
//*                                                                             
//*       Input:                                                                
//        SET MEMBER='A2DTFP2*'     Member searched for     Input               
//*       SET MEMBER='*2D%FP2*'     % 1 char, * n char                          
//*                                                                             
//        SET LEVEL1='**.SOUR*'                             Input               
//        SET LEVEL2='**.COBOL'                             Input               
//*                                                                             
//*       Output:                                                               
//        SET PREFIX=XX.YYYY        Prefix for user files                       
//*       List of libraries with &MEMBER                                        
//        SET LIBS=&PREFIX..&SYSUID..WHERE.LIBS                                 
//*                                                                             
//*       List of libraries and member statistics,                              
//*       ranked by decreasing order of last modification date                  
//        SET MEMBERS=&PREFIX..&SYSUID..WHERE.MEMBERS                           
//*                                                                             
//*       Output dsname unicity for parallelism:                                
//        SET LIBS=&LIBS..J&LJDAY&LHR&LMIN Julian Hour Minute                   
//        SET MEMBERS=&MEMBERS..J&LJDAY&LHR&LMIN                                
//*_________________________________________________________________            
//*                                                                             
//DELDEF   PROC DSN=,RECFM=FB,LRECL=80,BLKSIZE=28320                            
//*                                                                             
//DEL   EXEC PGM=IEFBR14                                                        
//DEL      DD DISP=(MOD,DELETE,DELETE),SPACE=(TRK,0),                           
//            DSN=&DSN                                                          
//*                                                                             
//DEF   EXEC PGM=ICEGENER                                                       
//SYSPRINT DD DUMMY                                                             
//SYSIN    DD DUMMY                                                             
//SYSUT2   DD DISP=(,CATLG),DSN=&DSN,                                           
//            RECFM=&RECFM,LRECL=&LRECL,BLKSIZE=&BLKSIZE,                       
//            SPACE=(CYL,(5,5))                                                 
//SYSUT1   DD DUMMY,DCB=*.SYSUT2                                                
//DELDEF   PEND                                                                 
//*_________________________________________________________________            
//*                                                                             
//DELDEF1 EXEC DELDEF,DSN=&LIBS,LRECL=132,BLKSIZE=0                             
//DELDEF2 EXEC DELDEF,DSN=&MEMBERS,LRECL=164,BLKSIZE=0                          
//*_________________________________________________________________            
//*                                                                             
//PDSEASY EXEC PGM=PDSEASY,DYNAMNBR=3200                                        
//* DYNAMNBR                                                                    
//* from 0 through 3273 minus the number of DD statements in the step           
//EZYPRINT DD DISP=SHR,DSN=&LIBS  Output list of libraries with &MEMBER         
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD *,SYMBOLS=EXECSYS                                                 
 DSL '&LEVEL1'                    /* Dataset List */                            
 APP '&LEVEL2'                    /* Append       */                            
 FINDMEM &MEMBER  ALL             /* FIND &MBR IN ALL DSNS */                   
 IF MESSAGE EQ '*Mem-Found'       /* MESSAGE <> ' ' */                          
 HC                               /* HARDCOPY REPORT */                         
//*_________________________________________________________________            
//*                                                                             
//REXBAT   PROC                                                                 
//         EXEC PGM=IKJEFT1B,DYNAMNBR=500                                       
//ISPCTL1  DD DSN=&&ISPCTL1,DISP=(,DELETE),                                     
//         RECFM=FB,LRECL=80,BLKSIZE=27920                                      
//ISPFILE  DD DSN=&&ISPFILE,DISP=(,DELETE),                                     
//         RECFM=FB,LRECL=80,BLKSIZE=27920                                      
//ISPLOG  DD DSN=&&ISPLOG,UNIT=SYSDA,SPACE=(TRK,(15,15)),                       
//         LRECL=125,BLKSIZE=129,RECFM=VA                                       
//ISPPROF  DD DSN=&ISPPROF,DISP=NEW,UNIT=SYSDA,SPACE=(TRK,(15,15,5)),           
//         RECFM=FB,LRECL=80,BLKSIZE=3120                                       
//ISPPLIB  DD DISP=SHR,DSN=ISP.SISPPENU                                         
//ISPMLIB  DD DISP=SHR,DSN=ISP.SISPMENU                                         
//ISPSLIB  DD DISP=SHR,DSN=ISP.SISPSENU                                         
//ISPTABL  DD DUMMY                                                             
//ISPTLIB  DD RECFM=FB,LRECL=80,UNIT=VIO,SPACE=(TRK,(1,0,1))                    
//         DD DISP=SHR,DSN=ISP.SISPTENU                                         
//ISPLLIB  DD DISP=SHR,DSN=ISP.SISPLOAD                                         
//SYSPROC  DD DISP=SHR,DSN=ISP.SISPCLIB                                         
//         DD DISP=SHR,DSN=SYS1.SBPXEXEC                                        
//*SYSEXEC no //SYSEXEC due to IEBGENER use                                     
//SYSTSPRT DD SYSOUT=*,OUTLIM=50000                                             
//*        //SYSTSIN  DD DUMMY     Add at invokation                            
//REXBAT   PEND                                                                 
//*_________________________________________________________________            
//*                                                                             
//GO       EXEC REXBAT,COND=(4,LT)                                              
//SYSTSIN  DD *,SYMBOLS=EXECSYS                                                 
profile noprefix                                                                
call *(iebgener)                                                                
ispstart cmd(%main &member)  bdispmax(999999)                                   
/*                                                                              
//LIBS     DD DISP=SHR,DSN=&LIBS       Input  file                              
//MEMBERS  DD DISP=MOD,DSN=&MEMBERS    Output file                              
//SYSPRINT DD SYSOUT=*                                                          
//SYSIN    DD DUMMY                                                             
//SYSUT2   DD DSN=&&TEMPPDS(MAIN),UNIT=VIO,SPACE=(TRK,(1,1,1))                  
//SYSEXEC  DD DSN=&&TEMPPDS,VOL=REF=*.SYSUT2,DISP=(OLD,DELETE)                  
//SYSUT1   DD *                                                                 
 /* rexx */                                                                     
 trace o                                                                        
 parse arg pattern .                                                            
 /* Example: pattern = "A2DTFP2*"                                    */         
 /* pattern is &member in SYSTSIN control card:                      */         
 /*         ispstart cmd(%main &member)  bdispmax(999999)            */         
 /* pattern is a LMMLIST parameter.                                  */         
 /* This rexx has name main.                                         */         
 /*__________________________________________________________________*/         
 /*     LMMLIST with pattern                                         */         
 /*     on each of the libraries whose name                          */         
 /*     is present in &LIBS.                                         */         
 /*__________________________________________________________________*/         
 /* Obtain libraries names and process (lmmlist) each library        */         
                                                                                
 /* Second qualifier of:                                             */         
 /*   (LMMLIST output with SAVE option:                              */         
 /*   dsnmbrs = prefix'.'group'.MEMBERS')                            */         
 group='T'time('s') /* second qualifier                              */         
                                                                                
 "execio * diskr libs (stem stem. finis"                                        
 do i = 1 to stem.0                                                             
    if pos('*Mem-Found',stem.i) = 0 then iterate                                
    dsn = word(stem.i,1)   /* first word of line                     */         
    call process_dsn                                                            
 end /* do i = 1 to stem.0                                           */         
                                                                                
  /* Clean up LMMLIST output.                                        */         
  address tso                                                                   
  x = msg("off")                                                                
      "delete '"dsnmbrs"'"                                                      
  x = msg(x)                                                                    
  address                                                                       
                                                                                
 zispfrc  = 0     /* return code thru ISPF  */                                  
 address ispexec "vput zispfrc"                                                 
 exit 0                                                                         
                                                                                
 /*__________________________________________________________________*/         
                                                                                
 process_dsn: procedure expose dsn pattern group dsnmbrs                        
 /********************************************************************/         
 /* Get dataid for data set and issue LMOPEN.                        */         
 /********************************************************************/         
  address ispexec                                                               
  "control errors return"                                                       
  "lminit dataid(data1) dataset('"dsn"')"                                       
  xrc = rc                                                                      
  if xrc <> 0 then                                                              
    do  /* lminit not ok */                                                     
        say "Error processing "dsn":"                                           
        say " lminit failed with "xrc" return code"                             
        return                                                                  
    end /* lminit not ok */                                                     
                                                                                
 "lmopen dataid("data1") option(input)"                                         
  xrc = rc                                                                      
  if xrc <> 0 then                                                              
    do  /* lmopen not ok */                                                     
        say "Error processing "dsn":"                                           
        say " lmopen failed with "xrc" return code"                             
    end /* lmopen not ok */                                                     
                                                                                
 /********************************************************************/         
 /* Get statistics for specified members                             */         
 /********************************************************************/         
                                                                                
  /* Set up profile prefix to userid if no prefix.                   */         
  address tso                                                                   
  prefix0 = sysvar('syspref')       /* tso profile prefix            */         
  if prefix0 = '' then do           /* noprefix                      */         
     uid = sysvar('sysuid')         /* use userid                    */         
    "profile prefix("uid")"                                                     
     prefix  = sysvar('syspref')    /* tso profile prefix            */         
  end /* if prefix0 = ''                                             */         
  else prefix = prefix0                                                         
                                                                                
  /* Delete MEMBERS file preventively if it exists.                  */         
  dsnmbrs = prefix'.'group'.MEMBERS'                                            
  x = msg("off")                                                                
      "delete '"dsnmbrs"'"                                                      
  x = msg(x)                                                                    
  address                                                                       
                                                                                
 'lmmlist dataid('data1')',                                                     
 'option(save) stats(yes)',                                                     
 'group('group') pattern('pattern') long'                                       
  xrc = rc                                                                      
                                                                                
  address tso                                                                   
  if prefix0 = '' then profile noprefix  /* restore      */                     
  address                                                                       
                                                                                
  /* xrc = 4 if empty member list                        */                     
  if xrc > 4 then                                                               
     do  /* lmmlist option(save) not ok */                                      
     say "Error processing "dsn":"                                              
     say " lmmlist option(save) failed with "xrc" return code"                  
     return                                                                     
  end /* lmmlist option(save) not ok */                                         
                                                                                
 address tso                                                                    
 "alloc fi(ddnmbrs) da('"dsnmbrs"') shr reu"                                    
 'execio * diskr ddnmbrs (stem members. finis'                                  
  do i = 1 to members.0                                                         
     members.i = left(dsn,44)' 'members.i /* prefix by dsname */                
  end /* do i = 1 to members.0 */                                               
 'execio * diskw members (stem members. finis' /* DISP=MOD */                   
 address      /* resume previous environment */                                 
                                                                                
 /********************************************************************/         
 /* Clean up.                                                        */         
 /********************************************************************/         
 'lmclose dataid('data1')'                                                      
  xrc = rc                                                                      
  if xrc <> 0 then                                                              
     do  /* lmclose not ok */                                                   
     say "Error processing "dsn":"                                              
     say " lmclose failed with "xrc" return code"                               
     return                                                                     
  end /* lmclose not ok */                                                      
                                                                                
 'lmfree  dataid('data1')'                                                      
  xrc = rc                                                                      
  if xrc <> 0 then                                                              
     do  /* lmfree  not ok */                                                   
     say "Error processing "dsn":"                                              
     say " lmfree  failed with "xrc" return code"                               
     return                                                                     
  end /* lmfree  not ok */                                                      
                                                                                
 return                                                                         
//*_________________________________________________________________            
//* Sort by decreasing last modification date                                   
//*                                                                             
//LASTMOD  EXEC PGM=SORT,COND=(4,LT)                                            
//SORTIN   DD DISP=SHR,DSN=&MEMBERS    Input  file                              
//SORTOUT  DD DISP=SHR,DSN=&MEMBERS    Output file                              
//SYSOUT   DD SYSOUT=*                                                          
 SORT FIELDS=(104,10,CH,D)  Last modification date first (SOURCE)               
*SORT FIELDS=(91,8,CH,D)    Decreasing size              (LOAD)                 
