/* rexx */                                                                      
                                                                                
/* Extract data records from an non compressed, non encrypted     */            
/* ADRDSSU DUMP of a PDSE with RECFM=FB.                          */            
/* Member data records may be interspersed.                       */            
/* First parameter is the DUMP dataset name.                      */            
/* Second parameter is the PDSE fixed logical record length,      */            
/* default value is 80.                                           */            
                                                                                
/* Examples of use:                                               */            
/* 1) Command ===> tso humpty BOZO.PDS.DUMP                       */            
/* 2) Command ===> tso humpty BOZO.PDS.DUMP2 40                   */            
/*                                                                */            
/* 3) In ISPF 3.4:                                                */            
/* Command - Enter "/" to select action                           */            
/* -----------------------------------------------------------    */            
/* humpty    BOZO.PDS.DUMP     <-- humpty before dsname           */            
/* humpty / 40 7931.PDS.DUMP2                                     */            
                                                                                
/* For other ADRDSSU DUMPs (PDS or load libraries for instance),  */            
/* use of rexx 'strings' (Unix 'strings' command portage on MVS)  */            
/* may be considered.                                             */            
                                                                                
trace o                                                                         
parse arg indsn len .                                                           
                                                                                
/* _____________________________________________________________  */            
/*                                                                */            
/* indsn is the ADRDSSU DUMP dataset name for one or several      */            
/* PDSEs with RECFM=FB and the same LRECL.                        */            
                                                                                
/* len is the LRECL of the PDSE(s) with RECFM=FB with same LRECL  */            
/* which were dumped. If len is not indicated, then len=80.       */            
/* _____________________________________________________________  */            
                                                                                
/* _____________________________________________________________  */            
/* In an ADRDSSU DUMP of a PDSE with RECFM=FB, data records       */            
/* begin by X'00hh' were hh is the LRECL in hexadecimal           */            
/* characters.                                                    */            
/* For LRECL=80, the data records begin by X'0050'.               */            
                                                                                
/* In an ADRDSSU PDSE DUMP, data records of a deleted member      */            
/* may not be all present when using the DUMP parameters          */            
/* ALLDATA(*) ALLX                                                */            
                                                                                
/* In an ADRDSSU PDS DUMP, data records of a deleted member       */            
/* are present when using the DUMP parameters                     */            
/* ALLDATA(*) ALLX                                                */            
/* but the data records are not preceded by their length in       */            
/* hexadecimal characters.                                        */            
/* _____________________________________________________________  */            
                                                                                
address tso                                                                     
parse source var                                                                
rexxname = word(var,3)                                                          
                                                                                
/* indsn    = "BOZO.DUMP.BOZO.TEST" for debugging                 */            
indsn = strip(indsn,,"'") /* remove quotes if any                 */            
                                                                                
if len = '' then len = 80 /* default LRECL                        */            
hhhh = "'"d2x(len,4)"'x"  /* len = 80 --> hhhh = "'0050'x"        */            
                                                                                
infile  = "DD01"                                                                
outfile = "DD01O"                                                               
                                                                                
"alloc fi("infile") da('"indsn"') shr reu"                                      
call allocate_output_file                                                       
                                                                                
"execio 0 diskr "infile"  (open"                                                
"execio 0 diskw "outfile" (open"                                                
                                                                                
maxrecs = 10000000 /* maximum number of dump records which        */            
                   /* could be read                               */            
in = ''            /* string to scan for data records.            */            
                   /* in is current scanning string.              */            
do n = 1 to maxrecs                                                             
   "execio 1 diskr "infile /* read input record                   */            
   if rc = 2 then leave      /* at end of input file              */            
   parse pull in0            /* ADRDSSU record                    */            
   /* Concatenate non prefix part of ADRDSSU record to take care  */            
   /* of spill over data records.                                 */            
   in = in !! substr(in0,17) /* ADRDSSU record has 16 char prefix */            
                                                                                
   /* Scan 'in' record,                                           */            
   /* reducing its length after each found data record.           */            
   interpret "k = pos("hhhh",in)" /* first match                  */            
   do while k > 0                                                               
      line.1 = substr(in,k+2,len)                                               
      "execio 1 diskw "outfile" (stem line." /* write data record */            
      /* Replace in by what is left after extracted data record.  */            
      k = k + len + 2 /* position past extracted data record      */            
      in = substr(in,k)                                                         
      interpret "k = pos("hhhh",in)"         /* next match        */            
   end /* do while k > 0                                          */            
   /* end of scanning in record                                   */            
                                                                                
end /* do n = 1 to maxrecs                                        */            
/* end of processing at maximum maxrecs ADRDSSU input lines       */            
                                                                                
"execio 0 diskr "infile"  (finis" /* close infile                 */            
"execio 0 diskw "outfile" (finis" /* close outfile                */            
                                                                                
"free fi("infile")"                                                             
"free fi("outfile")"                                                            
                                                                                
if sysvar(sysispf) = 'ACTIVE' then                                              
   address ispexec "view dataset('"outdsn"')"                                   
                                                                                
exit                                                                            
/* ______________________________________________________________ */            
allocate_output_file: procedure expose rexxname len infile outfile,             
                      indsn outdsn                                              
                                                                                
/* rexxname, len,  infile and outfile ddnames, indsn: input       */            
/* outdsn: output                                                 */            
                                                                                
call set_up_prefix /* create prefix for new file                  */            
quallist = translate(indsn,' ','.')         /* qualifier list     */            
lastqual = word(quallist,words(quallist))   /* last qualifier     */            
ran      = right(random(1,99999),5,'0')                                         
outdsn   = prefix"."rexxname"."lastqual".R"ran                                  
msg_prev = msg('off')                                                           
"alloc file("outfile") da('"outdsn"') new catalog",                             
"tracks space(50,500) reuse lrecl("len") recfm(f b) blksize(0)"                 
alloc_rc = rc                                                                   
if alloc_rc <> 0 then do                                                        
   say rexxname "could not allocate the output file "outdsn                     
   say "We exit with code 16."                                                  
   say "alloc rc = "alloc_rc                                                    
   "free f("infile")"                                                           
   zispfrc = 16                                                                 
   if sysvar(sysispf) = 'ACTIVE' then address ispexec 'vput zispfrc'            
   exit zispfrc                                                                 
end /* if alloc_rc <> 0                                     */                  
msg_off  = msg(msg_prev)                                                        
                                                                                
return                                                                          
/*________________________________________________________________*/            
                                                                                
set_up_prefix:                                                                  
                                                                                
/* Set up new output file prefix.                                 */            
prefix = sysvar('syspref')           /* tso profile prefix        */            
uid    = sysvar('sysuid')            /* tso userid                */            
if prefix = '' then prefix = uid     /* use uid if null prefix    */            
if prefix <> '' & prefix <> uid then /* different prefix than uid */            
   prefix = prefix'.'uid             /* use prefix.uid            */            
                                                                                
return                                                                          
 /*_______________________________________________________________*/            
