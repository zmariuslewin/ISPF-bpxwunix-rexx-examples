//LMCOPY PROC I=, Input dataset, sequential or library                          
//            O=, Output dataset, sequential or library                         
//*  Set LMCOPY parameters:                                                     
//            COPYPARM='FROMMEM(*) TRUNC'                                       
//*      LMCOPY parameters: FROMMEM(pattern) TOMEM(to-member-name)              
//*                         pattern example: %A*B*                              
//*                         REPLACE PACK TRUNC ALIAS NOALIAS                    
//*_________________________________________________________________            
//*                                                                             
//*      LMCOPY in batch (corresponds to ISPF 3.3)                              
//*      Input and output files could have different RECFM and LRECL.           
//*                                                                             
//*      Example of use:                                                        
//*      // SET I=dsn1                                                          
//*      // SET O=dsn2                                                          
//*      // EXEC LMCOPY,I=&I,O=&O                                               
//*_________________________________________________________________            
//*                                                                             
//*                                                                             
//   EXPORT SYMLIST=*                                                           
//   SET QUOTE=''''                                                             
//   SET COPYPARM=&QUOTE&COPYPARM&QUOTE To insert in //SYSTSIN                  
//*                                                                             
//LMCOPY   EXEC PGM=IKJEFT1B,DYNAMNBR=50                                        
//ISPLOG   DD DSN=&&ISPLOG,UNIT=SYSDA,SPACE=(TRK,(15,15)),                      
//         LRECL=125,BLKSIZE=129,RECFM=VA                                       
//ISPPROF  DD DSN=&ISPPROF,DISP=NEW,UNIT=SYSDA,SPACE=(TRK,(15,15,5)),           
//         RECFM=FB,LRECL=80,BLKSIZE=3120                                       
//ISPPLIB  DD RECFM=FB,LRECL=80,UNIT=VIO,SPACE=(TRK,(1,0,1))                    
//ISPMLIB  DD DISP=SHR,DSN=ISP.SISPMENU                                         
//ISPSLIB  DD RECFM=FB,LRECL=80,UNIT=VIO,SPACE=(TRK,(1,0,1))                    
//ISPTABL  DD DUMMY                                                             
//ISPTLIB  DD RECFM=FB,LRECL=80,UNIT=VIO,SPACE=(TRK,(1,0,1))                    
//         DD DISP=SHR,DSN=ISP.SISPTENU                                         
//*                                                                             
//SYSTSIN  DD *,SYMBOLS=EXECSYS                                                 
profile noprefix                                                                
call *(iebgener)                                                                
ispstart cmd(%main +                                                            
         &copyparm +                                                            
            )  bdispmax(999999)                                                 
//*                                                                             
//SYSTSPRT DD SYSOUT=*,OUTLIM=50000                                             
//*                                                                             
//SYSPRINT DD DUMMY SYSOUT=*                                                    
//SYSIN    DD DUMMY                                                             
//*                                                                             
//SYSUT2   DD DSN=&&TEMPPDS(MAIN),UNIT=VIO,SPACE=(TRK,(1,1,1))                  
//SYSEXEC  DD DSN=&&TEMPPDS,VOL=REF=*.SYSUT2,DISP=(OLD,DELETE)                  
//*                                                                             
//SYSUT1   DD DATA,DLM='><)))°>'                                                
 /* rexx */                                                                     
                                                                                
 /*___________________________________________________________________*/        
 /*                                                                   */        
 /* LMCOPY to a sequential dataset or a library                       */        
 /* with possible different RECFM and LRECL                           */        
 /* as ISPF 3.3.                                                      */        
 /* IEBCOPY does not copy from FB to VB in z/OS 2.3.                  */        
 /*___________________________________________________________________*/        
                                                                                
 trace o                                                                        
 parse arg copyparm             /* LMCOPY parameters                  */        
 parse source . . rexxname .    /* rexxname in upper case             */        
                                                                                
 address ispexec                                                                
 "control errors return"                                                        
                                                                                
 /* Copy library with LMCOPY.                                         */        
 "lminit dataid(dd1) ddname(i) enq(shr)"                                        
        lminit_dd1_rc = rc                                                      
        if lminit_dd1_rc > 0 then do                                            
           say 'Error at allocate ddname I.'                                    
           say 'lminit_dd1_rc = 'lminit_dd1_rc                                  
           zispfrc = 8                                                          
           signal fin                                                           
        end /* if lminit_dd1_rc > 0                                   */        
  "lminit dataid(dd2) ddname(o) enq(shr)"                                       
        lminit_dd2_rc = rc                                                      
        if lminit_dd2_rc > 0 then do                                            
           say 'Error at allocate ddname O.'                                    
           say 'lminit_dd2_rc = 'lminit_dd2_rc                                  
           zispfrc = 8                                                          
           signal lmfree2                                                       
        end /* if lminit_dd2_rc > 0                                   */        
                                                                                
 "lmcopy fromid("dd1") todataid("dd2") "copyparm                                
 /* Examples:                                                                   
 "lmcopy fromid("dd1") todataid("dd2") frommem(*) trunc"                        
 "lmcopy fromid("dd1") todataid("dd2")",                                        
 "frommem("rexxname")" tomem("member_new") replace"                             
 */                                                                             
        lmcopy_rc = rc                                                          
        if lmcopy_rc > 0 then do                                                
           say 'Copy error.'                                                    
           say 'lmcopy_rc = 'lmcopy_rc                                          
           call say_lmcopy_error                                                
           zispfrc = lmcopy_rc                                                  
           signal lmfree1                                                       
        end /* if lmcopy_rc > 0                                       */        
                                                                                
 lmfree1:                                                                       
 "lmfree dataid("dd1")"                                                         
        lmfree_dd1_rc = rc                                                      
        if lmfree_dd1_rc > 0 then do                                            
           zispfrc = 8                                                          
           say 'lmfree_dd1_rc = 'lmfree_dd1_rc                                  
        end /* if lmfree_dd1_rc > 0                                   */        
 lmfree2:                                                                       
 "lmfree dataid("dd2")"                                                         
        lmfree_dd2_rc = rc                                                      
        if lmfree_dd2_rc > 0 then do                                            
           zispfrc = 8                                                          
           say 'lmfree_dd2_rc = 'lmfree_dd2_rc                                  
        end /* if lmfree_dd2_rc > 0                                   */        
                                                                                
 fin:                                                                           
 zispfrc = 0                                                                    
 "vput (zispfrc) shared"                                                        
 exit zispfrc                                                                   
 /*___________________________________________________________________*/        
 say_lmcopy_error: procedure expose lmcopy_rc                                   
   select /* according to lmcopy return code                          */        
     when lmcopy_rc = 0 then return /* for completeness               */        
     when lmcopy_rc = 4 then do                                                 
          say "The 'from' data set is empty or"                                 
          say "no members matched the specified pattern",                       
              "in the 'from' data set."                                         
     end /* when lmcopy_rc = 4                                        */        
     when lmcopy_rc = 8 then do                                                 
          say "The from-member-name was not found or"                           
          say "the same name was specified for to-member-name and",             
          say "from-member-name."                                               
     end /* when lmcopy_rc = 8                                        */        
     when lmcopy_rc = 10 then do                                                
          say "No data set is associated with the given data ID."               
     end /* when lmcopy_rc = 10                                       */        
     when lmcopy_rc = 12 then do                                                
          say "One of these:"                                                   
          say "A like-named member already exists in the 'to' data set"         
          say "  and the Replace option was not specified"                      
          say "One or more members of the 'to' data set are 'in use',"          
          say "  either by you or by another user, and could not be copied"     
          say "Invalid data set organization"                                   
          say "Data set attribute invalid for copying or copying packed data"   
          say "Open error"                                                      
          say "LOCK parameter is specified"                                     
     end /* when lmcopy_rc = 12                                       */        
     when lmcopy_rc = 16 then do                                                
          say "Truncation error."                                               
     end /* when lmcopy_rc = 16                                       */        
     when lmcopy_rc = 20 then do                                                
          say "Severe error."                                                   
     end /* when lmcopy_rc = 20                                       */        
     otherwise nop                                                              
   end /* select according to lmcopy return code                      */        
   return                                                                       
 /*___________________________________________________________________*/        
><)))°>                                                                         
//I        DD DISP=SHR,DSN=&I       Input  file                                 
//O        DD DISP=SHR,DSN=&O       Output file                                 
