/* rexx */                                                                      
trace o                                                                         
/* Alternative to DSLIST                                            */          
                                                                                
/* Examples of use:                                                 */          
/* 1) Dataset list using a default pattern.                         */          
/*    Command ===> tso ds                                           */          
/* 2) Dataset list using a specific pattern.                        */          
/*    Command ===> tso ds boz%.**.*jcl*                             */          
/*    Command ===> cmde  <-- to preserve lower case                 */          
/*    Enter TSO commands below:                                     */          
/*    ===> tso ds /u/b?z*                                           */          
/* 3) Setting a permanent screen name to the present logical screen */          
/*    Command ===> tso ds screen1                                   */          
/* 4) Dataset list using a specific pattern                         */          
/*    in a new logical screen (no parameter order)                  */          
/*    Command ===> tso ds bozo.**.jcl screen1                       */          
/*    Command ===> tso ds screen1 bozo.**.jcl                       */          
/*    screen1 is the name given to the new logical screen.          */          
/* 5) As an edit macro in View or Edit                              */          
/*    (if there is not another ds present in the ISPF command       */          
/*    tables):                                                      */          
/*    Command ===> ds                                               */          
/*    Command ===> ds bozo.**.jcl                                   */          
/*    Command ===> ds screen1                                       */          
/*    Command ===> ds bozo.**.jcl screen1                           */          
/*    Command ===> ds screen1 bozo.**.jcl                           */          
                                                                                
/* ispexec select code obtained from:                               */          
/* ISPF 3.16    Table Data Set . . 'SYS1.ISP.SISPTENU'              */          
                                                                                
/* Obtain parameters                                                */          
/* ><)))°>  ><)))°>  ><)))°>  ><)))°>  ><)))°>  ><)))°>  ><)))°>    */          
/* No extra code needed to make a rexx an edit macro.               */          
address isredit /* Am I an edit macro?                              */          
"macro (parms)"                                                                 
isr_rc = rc                                                                     
if isr_rc =  0 then do /* edit macro                                */          
   parse var parms pattern scrname .                                            
   nb_parm = words(parms)  /* 0, 1 or 2 parameters                  */          
end /*  if isr_rc =  0    edit macro                                */          
else do /* isr_rc <> 0    rexx                                      */          
   parse arg pattern scrname .                                                  
   nb_parm = words(arg(1)) /* 0, 1 or 2 parameters                  */          
end /* if isr_rc <> 0     rexx                                      */          
if nb_parm > 2 then nb_parm = 2 /* first two parameters at maximum  */          
address                                                                         
/* <°(((><  <°(((><  <°(((><  <°(((><  <°(((><  <°(((><  <°(((><    */          
                                                                                
select /* according to number of parameters                         */          
                                                                                
  when nb_parm = 0 then do                                                      
  /* _____ Default pattern to change (case of zero parameter) ______*/          
  pattern = 'abc.'userid()                                                      
  pattern    =  strip(pattern,,"'")  /* remove quotes if any        */          
  parse var pattern pattern '(' .    /* remove member if present    */          
  call alternative1                                                             
  /* _______________________________________________________________*/          
  end /* when nb_parm = 0                                           */          
                                                                                
  when nb_parm = 1 then do                                                      
  /* _______________________________________________________________*/          
  answer = look_like_a_screen_name(pattern)                                     
  if answer = "no" then do /* dataset name pattern assumed          */          
     pattern    =  strip(pattern,,"'")  /* remove quotes if any          */     
     parse var pattern pattern '(' .    /* remove member if present      */     
     pattern = translate(pattern,'/','\') /* '/' for Unix           */          
                                                                                
     /* dataset list                                                */          
     if pos('/',pattern) = 0 then call alternative1                             
     /* It could be:   call alternative2 or call alternative3       */          
     /* or call alternative4                                        */          
     else do /* for Unix                                            */          
        /* if no lower case in pattern, change all upper case       */          
        /* characters of pattern to lower case.                     */          
        upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'                                    
        lower = 'abcdefghijklmnopqrstuvwxyz'                                    
        if pattern == translate(pattern) then /* no lowercase       */          
           pattern =  translate(pattern,lower,upper)                            
        call alternative4 /* actual DSLIST                          */          
     end    /* for Unix                                             */          
                                                                                
  end /* if answer = "no" dataset name pattern assumed              */          
  else do /* if answer = "yes" then set permanent screen name       */          
     scrname = pattern                                                          
     stack = 'scrname 'scrname' perm'                                           
     /* stack ="command1;command2"                                  */          
     inocuous_panel = ispblank                                                  
     /* command(   ) implies:                                       */          
     /* panel processed in CONTROL NONDISPL ENTER mode              */          
     /* non display, simulate ENTER key                             */          
     "ispexec display panel("inocuous_panel") command(stack)"                   
  end     /* if answer = "yes" then set permanent screen name       */          
  /* _______________________________________________________________*/          
  end /* when nb_parm = 1                                           */          
                                                                                
  when nb_parm = 2 then do                                                      
  /* _____ Exchange scrname and pattern if pattern ________________ */          
  /*       seems to be a screen name (case of two parameters)       */          
     call possibly_exchange_pattern_scrname                                     
     pattern    =  strip(pattern,,"'")  /* remove quotes if any     */          
     parse var pattern pattern '(' .    /* remove member if present */          
     /* Modify scrname if it is not valid.                          */          
     call check_and_try_to_correct_screen_name                                  
  /* _____ Start new logical screen and obtain dataset list _______ */          
                                                                                
     /* perm: permanent                                             */          
     /* tso ds pattern : dataset list                               */          
     /* could be: dslist pattern  (then not recursive)              */          
     /*           if dslist available                               */          
     /* Alternative parm if dslist available:                       */          
     /* parm = 'scrname 'scrname' perm; dslist 'pattern             */          
                                                                                
     parse source . . rexxname .    /* rexxname in upper case       */          
     /* recursive rexx with the following parm:                     */          
     parm = 'scrname 'scrname' perm; tso 'rexxname pattern                      
     "ispexec select pgm(ispstrt) parm('"parm"')"                               
  /* _______________________________________________________________*/          
  end /* when nb_parm = 2                                           */          
                                                                                
  otherwise nop                                                                 
                                                                                
end     /* select according to number of parameters                 */          
exit                                                                            
                                                                                
alternative1: /* for DSLIST                                         */          
/* DSL in caps                                                      */          
"ispexec select pgm(isrdslst) parm(DSL '"pattern"') suspend scrname(dslist)"    
return                                                                          
                                                                                
alternative2: /* for DSLIST                                         */          
zparm="'"pattern"'"                                                             
"ispexec select pgm(isrdslst) parm(DSL &zparm) suspend scrname(dslist)"         
return                                                                          
                                                                                
alternative3: /* for DSLIST                                         */          
address ispexec                                                                 
  "lmdinit listid(listidv) level("pattern")"                                    
  "lmddisp listid("listidv") status(yes)"                                       
  "lmdfree listid("listidv")"                                                   
address                                                                         
return                                                                          
                                                                                
alternative4: /* actual DSLIST                                      */          
address ispexec                                                                 
  zdldsnlv = pattern                                                            
  "vput zdldsnlv"          /* lv: level                             */          
  "control nondispl enter" /* press ENTER on next screen only       */          
  "select pgm(isrudl) parm(isrudlp) scrname(dslist)"                            
address                                                                         
return                                                                          
                                                                                
/* ________________________________________________________________ */          
                                                                                
possibly_exchange_pattern_scrname: procedure expose pattern scrname             
                                                                                
/* Exchange scrname and pattern if pattern                          */          
/* seems to be a screen name (case of two parameters)               */          
/* Original parse arg was: parse arg pattern scrname .              */          
                                                                                
answer = look_like_a_screen_name(pattern)                                       
if answer = "yes" then do                                                       
   first = pattern; second = scrname                                            
   pattern = second; scrname = first                                            
end /* if answer = "yes"                                            */          
return                                                                          
/* End of possibly_exchange_pattern_scrname                         */          
/* ________________________________________________________________ */          
                                                                                
look_like_a_screen_name: procedure                                              
parse arg var .                                                                 
                                                                                
/* result is "yes" if var is small, does not contain '*' nor '%'    */          
/* nor '.' and is not an alias.                                     */          
/* result is "no" otherwise.                                        */          
                                                                                
answer = "yes" /* default value                                     */          
if length(var)  > 8 then return("no")                                           
if length(var)  < 2 then return("no")                                           
if pos('.',var) > 0 then return("no")                                           
if pos('*',var) > 0 then return("no")                                           
if pos('%',var) > 0 then return("no")                                           
if pos('/',var) > 0 then return("no")                                           
if pos('\',var) > 0 then return("no")                                           
                                                                                
/* Check for alias.                                                 */          
/* If var is an alias, return "no".                                 */          
/* An alias is assumed to be a dsname pattern.                      */          
stem_name = outtrap('silent.')                                                  
  address tso "listc ent('"var"') alias"                                        
  listc_alias_rc = rc /* rc = 0 if alias exists                     */          
outtrap_off = outtrap('off')                                                    
if listc_alias_rc = 0 then return("no")                                         
                                                                                
return("yes") /* var assumed to be a screen name                    */          
/* ________________________________________________________________ */          
                                                                                
check_and_try_to_correct_screen_name:,                                          
  procedure expose scrname                                                      
/* scrname is an input output parameter                    */                   
/* scrname 2 to 8 characters that conform to member naming */                   
/* rules , except NEXT, PREV, LIST, ON and OFF             */                   
                                                                                
scrname = translate(scrname) /* set in uppercase           */                   
                                                                                
if length(scrname) > 8 then do /* too long                 */                   
  say 'scrname 'scrname' should have at most 8 characters.'                     
  scrname = right(scrname,8) /* retain the 8 rightmost characters */            
end /* when length(scrname) > 8                            */                   
                                                                                
if length(scrname) < 2 then do /* too short                */                   
  say 'scrname 'scrname' should have at least 2 characters.'                    
  scrname = scrname!!scrname                                                    
end /* when length(scrname) < 2                            */                   
                                                                                
/* All characters alphanumeric or national                 */                   
do i = 1 to length(scrname)                                                     
   char = substr(scrname,i,1) /* ith character             */                   
   if datatype(char,alphanumeric) then iterate                                  
   if pos(char,'à£$') then iterate /* national char Ok     */                   
    scrname = overlay('X',scrname,i)  /* overlay ith char  */                   
end /* do i = 1 to length(scrname)                         */                   
                                                                                
/* First character not numeric                             */                   
char = left(scrname,1)                                                          
if datatype(char,number) then                                                   
    scrname = overlay('X',scrname,1)  /* overlay 1st char  */                   
                                                                                
/* scrname must not be NEXT, PREV, LIST, ON, OFF.          */                   
if wordpos(scrname,'NEXT PREV LIST ON OFF') > 0 then                            
  scrname = scrname!!'X'                                                        
return                                                                          
/* End of check_and_try_to_correct_screen_name ___________ */                   
